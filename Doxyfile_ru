# Doxyfile 1.12.0

# Этот файл описывает настройки, которые будут использоваться системой документации
# Doxygen (www.doxygen.org) для проекта.
#
# Весь текст после двойного хэша (##) считается комментарием и размещается перед
# тегом, к которому он относится.
#
# Весь текст после одного хэша (#) считается комментарием и будет игнорироваться.
# Формат:
# ТЕГ = значение [значение, ...]
# Для списков элементы также могут быть добавлены с помощью:
# ТЕГ += значение [значение, ...]
# Значения, содержащие пробелы, должны быть заключены в кавычки (\" \").
#
# Примечание:
#
# Используйте Doxygen, чтобы сравнить используемый конфигурационный файл с шаблонным
# конфигурационным файлом:
# doxygen -x [configFile]
# Используйте Doxygen, чтобы сравнить используемый конфигурационный файл с шаблонным
# конфигурационным файлом без замены переменных окружения или переменных замены типа
# CMake:
# doxygen -x_noenv [configFile]

#--------------------------------------------------------------------------- 
# Опции конфигурации, связанные с проектом
#---------------------------------------------------------------------------

# Этот тег указывает кодировку, используемую для всех символов в последующих строках
# конфигурационного файла. По умолчанию используется UTF-8, что также является
# кодировкой для всего текста до первого появления этого тега. Doxygen использует
# libiconv (или iconv, встроенный в libc) для транскодирования. Список возможных
# кодировок можно найти на https://www.gnu.org/software/libiconv/. 
# Значение по умолчанию: UTF-8.

DOXYFILE_ENCODING      = UTF-8

# Тег PROJECT_NAME — это одно слово (или последовательность слов, заключённых в
# двойные кавычки, если вы не используете Doxywizard), которое должно идентифицировать
# проект, для которого создаётся документация. Это имя используется в заголовке
# большинства сгенерированных страниц и в нескольких других местах.
# Значение по умолчанию: My Project.

PROJECT_NAME           = "My Project"

# Тег PROJECT_NUMBER можно использовать для ввода номера проекта или ревизии. Это
# может быть полезно для архивирования созданной документации или если используется
# система контроля версий.

PROJECT_NUMBER         =

# С помощью тега PROJECT_BRIEF можно предоставить необязательное однострочное описание
# проекта, которое будет отображаться вверху каждой страницы и должно дать зрителю
# быстрое представление о назначении проекта. Сохраните описание коротким.

PROJECT_BRIEF          =

# С помощью тега PROJECT_LOGO можно указать логотип или иконку, которая будет включена
# в документацию. Максимальная высота логотипа не должна превышать 55 пикселей, а
# максимальная ширина — 200 пикселей. Doxygen скопирует логотип в выходной каталог.

PROJECT_LOGO           = "C:/Users/mirni/Downloads/sex-male-female_87135 (1).ico"

# С помощью тега PROJECT_ICON можно указать иконку, которая будет включена в закладки
# при отображении HTML-документа. Doxygen скопирует иконку в выходной каталог.

PROJECT_ICON           =

# Тег OUTPUT_DIRECTORY используется для указания (относительного или абсолютного)
# пути, в который будет записана созданная документация. Если указан относительный путь,
# он будет относительным к местоположению, откуда был запущен Doxygen. Если оставлен
# пустым, будет использован текущий каталог.

OUTPUT_DIRECTORY       =

# Если тег CREATE_SUBDIRS установлен в YES, то Doxygen создаст до 4096
# подкаталогов (в 2 уровнях) в выходном каталоге для каждого формата вывода
# и распределит сгенерированные файлы по этим каталогам. Включение этой опции может быть
# полезным при обработке большого количества исходных файлов, когда размещение всех
# сгенерированных файлов в одном каталоге может вызвать проблемы с производительностью
# файловой системы. Настройте CREATE_SUBDIRS_LEVEL для контроля количества подкаталогов.
# Значение по умолчанию: NO.

CREATE_SUBDIRS         = YES

# Управляет количеством подкаталогов, которые будут созданы при установке
# тега CREATE_SUBDIRS в YES. Уровень 0 представляет 16 каталогов, и каждый
# уровень удваивает количество каталогов, в результате чего на уровне 8 получается
# 4096 каталогов, что является значением по умолчанию и также максимальным значением.
# Подкаталоги организованы в 2 уровнях, первый уровень всегда имеет фиксированное
# количество из 16 каталогов.
# Минимальное значение: 0, максимальное значение: 8, значение по умолчанию: 8.
# Этот тег требует, чтобы тег CREATE_SUBDIRS был установлен в YES.

CREATE_SUBDIRS_LEVEL   = 8
# Если тег ALLOW_UNICODE_NAMES установлен в YES, Doxygen позволит использовать не-ASCII
# символы в именах сгенерированных файлов. Если установлено NO, не-ASCII символы будут
# экранированы, например, _xE3_x81_x84 будет использоваться для Unicode U+3044.
# Значение по умолчанию: NO.

ALLOW_UNICODE_NAMES    = NO

# Тег OUTPUT_LANGUAGE используется для указания языка, на котором будет написана
# вся документация, создаваемая Doxygen. Doxygen использует эту информацию для генерации
# всех постоянных выходных данных на нужном языке.
# Возможные значения: Afrikaans, Arabic, Armenian, Brazilian, Bulgarian,
# Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, English
# (United States), Esperanto, Farsi (Persian), Finnish, French, German, Greek,
# Hindi, Hungarian, Indonesian, Italian, Japanese, Japanese-en (Japanese with
# English messages), Korean, Korean-en (Korean with English messages), Latvian,
# Lithuanian, Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese,
# Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish,
# Swedish, Turkish, Ukrainian и Vietnamese.
# Значение по умолчанию: English.

OUTPUT_LANGUAGE        = Russian

# Если тег BRIEF_MEMBER_DESC установлен в YES, Doxygen включит краткие описания членов
# после членов, перечисленных в документации файла и класса (аналогично Javadoc). Установите
# NO, чтобы отключить это.
# Значение по умолчанию: YES.

BRIEF_MEMBER_DESC      = YES

# Если тег REPEAT_BRIEF установлен в YES, Doxygen добавит краткое описание члена
# или функции перед детализированным описанием.
#
# Примечание: Если оба тега HIDE_UNDOC_MEMBERS и BRIEF_MEMBER_DESC установлены в NO,
# краткие описания будут полностью подавлены.
# Значение по умолчанию: YES.

REPEAT_BRIEF           = YES

# Этот тег реализует квази-интеллектуальный сокращатель кратких описаний, который используется
# для формирования текста в различных списках. Каждая строка в этом списке, если она найдена
# в качестве начального текста краткого описания, будет удалена из текста, и результат,
# после обработки всего списка, будет использован в качестве аннотированного текста.
# В противном случае краткое описание используется как есть. Если оставить пустым, будут
# использованы следующие значения ($name автоматически заменяется на имя сущности): The $name class,
# The $name widget, The $name file, is, provides, specifies, contains, represents, a, an и the.

ABBREVIATE_BRIEF       = "The $name class" \
                         "The $name widget" \
                         "The $name file" \
                         is \
                         provides \
                         specifies \
                         contains \
                         represents \
                         a \
                         an \
                         the

# Если оба тега ALWAYS_DETAILED_SEC и REPEAT_BRIEF установлены в YES, то Doxygen будет
# генерировать детализированный раздел, даже если есть только краткое описание.
# Значение по умолчанию: NO.

ALWAYS_DETAILED_SEC    = YES

# Если тег INLINE_INHERITED_MEMB установлен в YES, Doxygen будет показывать все
# унаследованные члены класса в документации этого класса так, как если бы эти
# члены были обычными членами класса. Конструкторы, деструкторы и операторы присваивания
# базовых классов отображаться не будут.
# Значение по умолчанию: NO.

INLINE_INHERITED_MEMB  = NO

# Если тег FULL_PATH_NAMES установлен в YES, Doxygen добавит полный путь перед именем
# файла в списке файлов и в заголовочных файлах. Если установлено NO, будет использоваться
# кратчайший путь, который делает имя файла уникальным.
# Значение по умолчанию: YES.

FULL_PATH_NAMES        = YES

# Тег STRIP_FROM_PATH можно использовать для удаления пользовательской части пути.
# Удаление производится только если одна из указанных строк совпадает с левой частью пути.
# Тег можно использовать для отображения относительных путей в списке файлов.
# Если оставить пустым, будет использоваться каталог, из которого запущен Doxygen, как путь
# для удаления.
#
# Обратите внимание, что здесь можно указывать как абсолютные пути, так и относительные пути,
# которые будут относительны от каталога, где был запущен Doxygen.
# Этот тег требует, чтобы тег FULL_PATH_NAMES был установлен в YES.

STRIP_FROM_PATH        =

# Тег STRIP_FROM_INC_PATH можно использовать для удаления пользовательской части пути,
# упомянутого в документации класса, который указывает читателю, какой заголовочный файл
# включить, чтобы использовать класс. Если оставить пустым, будет использоваться только имя
# заголовочного файла, содержащего определение класса. В противном случае следует указать
# список путей включения, которые обычно передаются компилятору с помощью флага -I.

STRIP_FROM_INC_PATH    =

# Если тег SHORT_NAMES установлен в YES, Doxygen будет генерировать гораздо более короткие
# (но менее читабельные) имена файлов. Это может быть полезно, если ваша файловая система не
# поддерживает длинные имена, как на DOS, Mac или CD-ROM.
# Значение по умолчанию: NO.

SHORT_NAMES            = NO
# Если тег JAVADOC_AUTOBRIEF установлен в YES, Doxygen будет интерпретировать первую строку
# (до первого точка) Javadoc-комментария как краткое описание. Если установлено NO, Javadoc-
# стиль будет вести себя как обычные комментарии Qt (требуя явной команды @brief для краткого
# описания).
# Значение по умолчанию: NO.

JAVADOC_AUTOBRIEF      = NO

# Если тег JAVADOC_BANNER установлен в YES, Doxygen будет интерпретировать строку
# такую как
# /***************
# как начало "баннера" Javadoc-комментария. Если установлено NO, Javadoc-стиль будет
# вести себя как обычные комментарии, и Doxygen не будет его интерпретировать.
# Значение по умолчанию: NO.

JAVADOC_BANNER         = NO

# Если тег QT_AUTOBRIEF установлен в YES, Doxygen будет интерпретировать первую строку
# (до первого точка) комментария в стиле Qt как краткое описание. Если установлено NO,
# Qt-стиль будет вести себя как обычные комментарии Qt (требуя явной команды \brief для
# краткого описания).
# Значение по умолчанию: NO.

QT_AUTOBRIEF           = NO

# Тег MULTILINE_CPP_IS_BRIEF можно установить в YES, чтобы Doxygen считал многострочный
# специальный комментарий C++ (то есть блок комментариев //! или ///) как краткое описание.
# Это было поведением по умолчанию ранее. Новое значение по умолчанию — считать многострочный
# комментарий C++ как детализированное описание. Установите этот тег в YES, если вы предпочитаете
# старое поведение.
#
# Обратите внимание, что установка этого тега в YES также означает, что комментарии Rational Rose
# больше не распознаются.
# Значение по умолчанию: NO.

MULTILINE_CPP_IS_BRIEF = NO

# По умолчанию строки документации Python отображаются как форматированный текст, и специальные
# команды Doxygen не могут быть использованы. Установив PYTHON_DOCSTRING в NO, можно использовать
# специальные команды Doxygen, и содержимое блоков документации строк будет отображаться как
# документация Doxygen.
# Значение по умолчанию: YES.

PYTHON_DOCSTRING       = YES

# Если тег INHERIT_DOCS установлен в YES, не задокументированный член наследует документацию
# от любого задокументированного члена, который он переопределяет.
# Значение по умолчанию: YES.

INHERIT_DOCS           = YES

# Если тег SEPARATE_MEMBER_PAGES установлен в YES, Doxygen создаст новую страницу для каждого
# члена. Если установлено NO, документация члена будет частью файла/класса/пространства имён,
# которое его содержит.
# Значение по умолчанию: NO.

SEPARATE_MEMBER_PAGES  = NO

# Тег TAB_SIZE можно использовать для установки количества пробелов в табуляции. Doxygen
# использует это значение для замены табуляций на пробелы в фрагментах кода.
# Минимальное значение: 1, максимальное значение: 16, значение по умолчанию: 4.

TAB_SIZE               = 4

# Этот тег можно использовать для указания числа псевдонимов, которые действуют как команды в
# документации. Псевдоним имеет форму:
# name=value
# Например, добавив
# "sideeffect=@par Side Effects:^^"
# вы сможете использовать команду \sideeffect (или @sideeffect) в документации, что приведёт к
# пользовательскому абзацу с заголовком "Side Effects:". Обратите внимание, что вы не можете
# вставлять \n в значение псевдонима для вставки переводов строк (в результирующем выводе).
# Вы можете вставить ^^ в значение псевдонима, чтобы вставить перевод строки так, как если бы
# физический перевод строки был в исходном файле. Когда вам нужен буквальный { или } или , в
# значении псевдонима, вам нужно экранировать их с помощью обратного слэша (\), это может
# привести к конфликтам с командами \{ и \}, для этих случаев рекомендуется использовать версию @{ и
# @} или двойное экранирование (\\{ и \\}).

ALIASES                =

# Установите тег OPTIMIZE_OUTPUT_FOR_C в YES, если ваш проект состоит только из исходников на C.
# Doxygen тогда будет генерировать выходные данные, более подходящие для C. Например, некоторые
# используемые имена будут другими. Список всех членов будет опущен и т. д.
# Значение по умолчанию: NO.

OPTIMIZE_OUTPUT_FOR_C  = YES

# Установите тег OPTIMIZE_OUTPUT_JAVA в YES, если ваш проект состоит только из исходников на Java
# или Python. Doxygen тогда будет генерировать выходные данные, более подходящие для этого языка.
# Например, пространства имён будут представлены как пакеты, квалифицированные области будут
# выглядеть по-другому и т. д.
# Значение по умолчанию: NO.

OPTIMIZE_OUTPUT_JAVA   = NO

# Установите тег OPTIMIZE_FOR_FORTRAN в YES, если ваш проект состоит из исходников на Fortran.
# Doxygen тогда будет генерировать выходные данные, адаптированные для Fortran.
# Значение по умолчанию: NO.

OPTIMIZE_FOR_FORTRAN   = NO

# Установите тег OPTIMIZE_OUTPUT_VHDL в YES, если ваш проект состоит из исходников на VHDL.
# Doxygen тогда будет генерировать выходные данные, адаптированные для VHDL.
# Значение по умолчанию: NO.

OPTIMIZE_OUTPUT_VHDL   = NO
# Установите тег OPTIMIZE_OUTPUT_SLICE в YES, если ваш проект состоит только из исходников Slice.
# Doxygen тогда будет генерировать выходные данные, более подходящие для этого языка. Например,
# пространства имён будут представлены как модули, типы будут разделены на большее количество групп и т. д.
# Значение по умолчанию: NO.

OPTIMIZE_OUTPUT_SLICE  = NO

# Doxygen выбирает парсер для использования в зависимости от расширения файлов, которые он обрабатывает.
# С помощью этого тега вы можете назначить, какой парсер использовать для данного расширения. Doxygen
# имеет встроенное отображение, но вы можете переопределить или расширить его, используя этот тег.
# Формат: ext=language, где ext — это расширение файла, а language — один из поддерживаемых Doxygen парсеров:
# IDL, Java, JavaScript, Csharp (C#), C, C++, Lex, D, PHP, md (Markdown), Objective-C, Python, Slice, VHDL,
# Fortran (фиксированный формат Fortran: FortranFixed, свободно форматированный Fortran: FortranFree, неизвестный
# формат Fortran: Fortran. В последнем случае парсер пытается угадать, является ли код фиксированным или свободным
# форматом, это значение по умолчанию для файлов типа Fortran). Например, чтобы заставить Doxygen рассматривать
# файлы .inc как файлы Fortran (по умолчанию PHP) и .f файлы как C (по умолчанию Fortran), используйте: inc=Fortran f=C.
#
# Примечание: Для файлов без расширения вы можете использовать no_extension как замену.
#
# Обратите внимание, что для пользовательских расширений также необходимо установить FILE_PATTERNS, иначе
# файлы не будут прочитаны Doxygen. При указании no_extension следует добавить * к FILE_PATTERNS.
#
# Также смотрите список отображений расширений по умолчанию.

EXTENSION_MAPPING      =

# Если поддержка MARKDOWN включена, Doxygen предварительно обрабатывает все комментарии в соответствии с
# форматом Markdown, что позволяет создать более читаемую документацию. Смотрите https://daringfireball.net/projects/markdown/
# для получения подробной информации. Выходные данные обработки markdown далее обрабатываются Doxygen, так что вы можете
# смешивать команды Doxygen, HTML и XML с форматированием Markdown. Отключайте только в случае проблем с обратной совместимостью.
# Значение по умолчанию: YES.

MARKDOWN_SUPPORT       = YES

# Когда тег TOC_INCLUDE_HEADINGS установлен в ненулевое значение, все заголовки до этого уровня автоматически включаются
# в оглавление, даже если у них нет атрибута id.
# Примечание: Эта функция в настоящее время применяется только к заголовкам Markdown.
# Минимальное значение: 0, максимальное значение: 99, значение по умолчанию: 6.
# Этот тег требует, чтобы тег MARKDOWN_SUPPORT был установлен в YES.

TOC_INCLUDE_HEADINGS   = 6

# Тег MARKDOWN_ID_STYLE можно использовать для указания алгоритма, используемого для генерации идентификаторов
# для заголовков Markdown. Примечание: Каждый идентификатор уникален.
# Возможные значения: DOXYGEN использует фиксированную строку 'autotoc_md', за которой следует номер последовательности, начиная с 0,
# и GITHUB использует строчную версию заголовка, где любые пробелы заменены на '-' и знаки препинания удалены.
# Значение по умолчанию: DOXYGEN.
# Этот тег требует, чтобы тег MARKDOWN_SUPPORT был установлен в YES.

MARKDOWN_ID_STYLE      = DOXYGEN

# Когда включена поддержка AUTOLINK, Doxygen пытается связывать слова, соответствующие задокументированным
# классам или пространствам имён, с их соответствующей документацией. Такое связывание можно предотвратить
# в отдельных случаях, поставив знак % перед словом или глобально установив AUTOLINK_SUPPORT в NO.
# Значение по умолчанию: YES.

AUTOLINK_SUPPORT       = YES

# Если вы используете классы STL (то есть std::string, std::vector и т. д.), но не хотите включать (файл тега для)
# исходников STL как входные данные, установите этот тег в YES, чтобы позволить Doxygen сопоставлять объявления и
# определения функций, аргументы которых содержат классы STL (например, func(std::string); против func(std::string) {}).
# Это также делает диаграммы наследования и сотрудничества, которые включают классы STL, более полными и точными.
# Значение по умолчанию: NO.

BUILTIN_STL_SUPPORT    = NO

# Если вы используете язык C++/CLI от Microsoft, установите эту опцию в YES для включения поддержки парсинга.
# Значение по умолчанию: NO.

CPP_CLI_SUPPORT        = NO

# Установите тег SIP_SUPPORT в YES, если ваш проект состоит только из исходников sip (см.: https://www.riverbankcomputing.com/software).
# Doxygen будет обрабатывать их как обычные C++, но будет предполагать, что все классы используют публичное наследование
# вместо приватного, когда нет явного ключевого слова защиты.
# Значение по умолчанию: NO.

SIP_SUPPORT            = NO

# Для IDL от Microsoft существуют атрибуты propget и propput для указания методов получения и установки для свойства.
# Установка этой опции в YES заставит Doxygen заменить методы get и set на свойство в документации.
# Это будет работать только в том случае, если методы действительно получают или устанавливают простой тип. Если это не так
# или вы хотите показать методы в любом случае, установите эту опцию в NO.
# Значение по умолчанию: YES.

IDL_PROPERTY_SUPPORT   = YES

# Если используется группировка членов в документации и тег DISTRIBUTE_GROUP_DOC установлен в YES, то Doxygen будет
# использовать документацию первого члена в группе (если таковой имеется) для других членов группы. По умолчанию
# все члены группы должны быть задокументированы явно.
# Значение по умолчанию: NO.

DISTRIBUTE_GROUP_DOC   = NO

# Если добавить структуру или класс в группу и эта опция включена, то также любая вложенная структура или класс
# добавляются в ту же группу. По умолчанию эта опция отключена, и нужно добавлять вложенные комплексы явно через \ingroup.
# Значение по умолчанию: NO.

GROUP_NESTED_COMPOUNDS = NO

# Установите тег SUBGROUPING в YES, чтобы разрешить группам членов класса одного типа (например, группе публичных функций)
# быть подгруппами этого типа (например, под секцией Public Functions). Установите в NO, чтобы предотвратить подгруппировку.
# В качестве альтернативы это можно сделать для каждого класса с помощью команды \nosubgrouping.
# Значение по умолчанию: YES.

SUBGROUPING            = YES

# Когда тег INLINE_GROUPED_CLASSES установлен в YES, классы, структуры и объединения отображаются внутри группы, в которую
# они включены (например, используя \ingroup) вместо отдельной страницы (для HTML и Man страниц) или секции (для LaTeX
# и RTF).
#
# Обратите внимание, что эта функция не работает в сочетании с SEPARATE_MEMBER_PAGES.
# Значение по умолчанию: NO.

INLINE_GROUPED_CLASSES = NO

# Когда тег INLINE_SIMPLE_STRUCTS установлен в YES, структуры, классы и объединения с только публичными полями данных или
# простыми полями typedef будут отображаться в документации области, в которой они определены (т.е. документация файла,
# пространства имён или группы), при условии, что эта область задокументирована. Если установить в NO, структуры,
# классы и объединения отображаются на отдельной странице (для HTML и Man страниц) или секции (для LaTeX и RTF).
# Значение по умолчанию: NO.

INLINE_SIMPLE_STRUCTS  = NO

# Когда включен тег TYPEDEF_HIDES_STRUCT, typedef структуры, объединения или перечисления документируется как структура,
# объединение или перечисление с именем typedef. Например, typedef struct TypeS {} TypeT будет отображаться в
# документации как структура с именем TypeT. Когда отключен, typedef будет отображаться как член файла, пространства
# имён или класса. А структура будет называться TypeS. Это может быть полезно для кода C, если соглашение о кодировании
# диктует, что все составные типы определяются typedef и только typedef используется, никогда не упоминается имя тега.
# Значение по умолчанию: NO.

TYPEDEF_HIDES_STRUCT   = NO

# Размер кэша поиска символов можно установить с помощью LOOKUP_CACHE_SIZE. Этот кэш используется для разрешения символов
# по их имени и области видимости. Поскольку это может быть дорогим процессом и часто один и тот же символ появляется
# несколько раз в коде, Doxygen сохраняет кэш предварительно разрешённых символов. Если кэш слишком маленький, Doxygen
# будет работать медленно. Если кэш слишком большой, память будет потрачена зря. Размер кэша задаётся этой формулой:
# 2^(16+LOOKUP_CACHE_SIZE). Допустимый диапазон значений: 0..9, значение по умолчанию: 0, соответствующее размеру
# кэша 2^16=65536 символов. В конце выполнения Doxygen сообщит использование кэша и предложит оптимальный размер кэша
# с точки зрения скорости.
# Минимальное значение: 0, максимальное значение: 9, значение по умолчанию: 0.

LOOKUP_CACHE_SIZE      = 0

# NUM_PROC_THREADS указывает количество потоков, которые Doxygen может использовать во время обработки.
# При установке в 0 Doxygen будет основываться на количестве доступных в системе ядер. Вы можете установить
# явно значение больше 0 для получения большего контроля над балансом между загрузкой процессора и скоростью
# обработки. На данный момент только обработка входных данных может выполняться с использованием нескольких потоков.
# Поскольку это всё ещё экспериментальная функция, значение по умолчанию установлено в 1, что фактически отключает
# параллельную обработку. Пожалуйста, сообщайте о любых проблемах. Генерация графиков dot параллельно контролируется
# настройкой DOT_NUM_THREADS.
# Минимальное значение: 0, максимальное значение: 32, значение по умолчанию: 1.

NUM_PROC_THREADS       = 1

# Если тег TIMESTAMP установлен в значение, отличное от NO, каждая сгенерированная страница будет содержать дату
# или дату и время, когда страница была сгенерирована. Установка в NO может помочь при сравнении выходных данных
# нескольких запусков.
# Возможные значения: YES, NO, DATETIME и DATE.
# Значение по умолчанию: NO.

TIMESTAMP              = NO
#---------------------------------------------------------------------------
# Опции конфигурации, связанные со сборкой
#---------------------------------------------------------------------------

# Если тег EXTRACT_ALL установлен в YES, Doxygen будет считать, что все сущности
# в документации задокументированы, даже если документация не была предоставлена.
# Приватные члены класса и статические члены файла будут скрыты, если теги
# EXTRACT_PRIVATE и EXTRACT_STATIC не установлены в YES соответственно.
# Примечание: Это также отключит предупреждения о недокументированных членах,
# которые обычно генерируются, когда WARNINGS установлено в YES.
# Значение по умолчанию: NO.

EXTRACT_ALL            = YES

# Если тег EXTRACT_PRIVATE установлен в YES, все приватные члены класса будут
# включены в документацию.
# Значение по умолчанию: NO.

EXTRACT_PRIVATE        = NO

# Если тег EXTRACT_PRIV_VIRTUAL установлен в YES, задокументированные приватные
# виртуальные методы класса будут включены в документацию.
# Значение по умолчанию: NO.

EXTRACT_PRIV_VIRTUAL   = NO

# Если тег EXTRACT_PACKAGE установлен в YES, все члены с областью видимости пакета
# или внутренней областью будут включены в документацию.
# Значение по умолчанию: NO.


EXTRACT_PACKAGE        = NO

# Если флаг EXTRACT_STATIC установлен в значение YES, все статические члены
# файла будут включены в документацию.
# Значение по умолчанию: NO.

EXTRACT_STATIC         = NO

# Если флаг EXTRACT_LOCAL_CLASSES установлен в значение YES, классы (и
# структуры), определенные локально в исходных файлах, будут включены в
# документацию. Если установить NO, будут включены только классы,
# определенные в заголовочных файлах. Не имеет никакого эффекта для
# исходных файлов Java.
# Значение по умолчанию: YES.

EXTRACT_LOCAL_CLASSES  = YES

# Этот флаг полезен только для кода Objective-C. Если установить YES,
# локальные методы, определенные в секции реализации, но не в интерфейсе,
# будут включены в документацию. Если установить NO, будут включены
# только методы в интерфейсе.
# Значение по умолчанию: NO.

EXTRACT_LOCAL_METHODS  = NO

# Если этот флаг установлен в значение YES, члены анонимных пространств
# имен будут извлечены и появятся в документации как пространство имен
# под названием 'anonymous_namespace{file}', где file будет заменено на
# базовое имя файла, содержащего анонимное пространство имен. По умолчанию
# анонимные пространства имен скрыты.
# Значение по умолчанию: NO.

EXTRACT_ANON_NSPACES   = NO

# Если этот флаг установлен в значение YES, имя неназванного параметра в
# объявлении будет определено соответствующим определением. По умолчанию
# неназванные параметры остаются неназванными в выводе.
# Значение по умолчанию: YES.

RESOLVE_UNNAMED_PARAMS = YES

# Если флаг HIDE_UNDOC_MEMBERS установлен в значение YES, Doxygen будет
# скрывать все не документированные члены внутри документированных классов
# или файлов. Если установить NO, эти члены будут включены в различные
# обзоры, но секция документации не будет сгенерирована. Этот параметр не
# имеет эффекта, если EXTRACT_ALL включен.
# Значение по умолчанию: NO.

HIDE_UNDOC_MEMBERS     = NO

# Если флаг HIDE_UNDOC_CLASSES установлен в значение YES, Doxygen будет
# скрывать все не документированные классы, которые обычно видны в
# иерархии классов. Если установить NO, эти классы будут включены в
# различные обзоры. Этот параметр также скроет не документированные
# концепции C++, если он включен. Этот параметр не имеет эффекта, если
# EXTRACT_ALL включен.
# Значение по умолчанию: NO.

HIDE_UNDOC_CLASSES     = NO

# Если флаг HIDE_FRIEND_COMPOUNDS установлен в значение YES, Doxygen будет
# скрывать все объявления друзей. Если установить NO, эти объявления
# будут включены в документацию.
# Значение по умолчанию: NO.

HIDE_FRIEND_COMPOUNDS  = NO

# Если флаг HIDE_IN_BODY_DOCS установлен в значение YES, Doxygen будет
# скрывать любые блоки документации, найденные внутри тела функции. Если
# установить NO, эти блоки будут добавлены к детализированному блоку
# документации функции.
# Значение по умолчанию: NO.

HIDE_IN_BODY_DOCS      = NO

# Флаг INTERNAL_DOCS определяет, включается ли документация, которая
# написана после команды \internal. Если флаг установлен в значение NO,
# документация будет исключена. Установите YES, чтобы включить внутреннюю
# документацию.
# Значение по умолчанию: NO.

INTERNAL_DOCS          = NO

# С правильной настройкой параметра CASE_SENSE_NAMES Doxygen будет лучше
# соответствовать возможностям файловой системы. Если файловая система
# чувствительна к регистру (т.е. поддерживает файлы в одной директории,
# имена которых различаются только регистром), этот параметр должен быть
# установлен в значение YES, чтобы правильно обрабатывать такие файлы,
# если они появляются во входных данных. Для файловых систем, которые не
# чувствительны к регистру, параметр должен быть установлен в NO, чтобы
# правильно обрабатывать выходные файлы, записанные для символов,
# различающихся только регистром, например, для двух классов, один из
# которых называется CLASS, а другой Class, и также поддерживать ссылки
# на файлы без необходимости указывать точное совпадение регистра. На
# Windows (включая Cygwin) и macOS пользователи обычно должны устанавливать
# этот параметр в NO, тогда как на Linux или других вариантах Unix его
# обычно устанавливают в YES.
# Возможные значения: SYSTEM, NO и YES.
# Значение по умолчанию: SYSTEM.

CASE_SENSE_NAMES       = SYSTEM
# Если флаг HIDE_SCOPE_NAMES установлен в значение NO, то Doxygen будет
# отображать члены с полными областями классов и пространств имен в
# документации. Если установить YES, область будет скрыта.
# Значение по умолчанию: NO.

HIDE_SCOPE_NAMES       = NO

# Если флаг HIDE_COMPOUND_REFERENCE установлен в значение NO (по
# умолчанию), то Doxygen добавит дополнительный текст к заголовку страницы,
# например, "Справочник по классам". Если установить YES, справочник по
# компаундам будет скрыт.
# Значение по умолчанию: NO.

HIDE_COMPOUND_REFERENCE = NO

# Если флаг HIDE_COMPOUND_REFERENCE установлен в значение NO (по
# умолчанию), то Doxygen добавит дополнительный текст к заголовку страницы,
# например, "Справочник по классам". Если установить YES, справочник по
# компаундам будет скрыт.
# Значение по умолчанию: NO.

HIDE_COMPOUND_REFERENCE= NO

# Если флаг SHOW_HEADERFILE установлен в значение YES, то документация для
# класса будет показывать, какой файл нужно включить для использования
# класса.
# Значение по умолчанию: YES.

SHOW_HEADERFILE        = YES

# Если флаг SHOW_INCLUDE_FILES установлен в значение YES, то Doxygen добавит
# в документацию файла список файлов, которые включены этим файлом.
# Значение по умолчанию: YES.

SHOW_INCLUDE_FILES     = YES

# Если флаг SHOW_GROUPED_MEMB_INC установлен в значение YES, то Doxygen добавит
# для каждого сгруппированного члена оператор include в документацию,
# указывая, какой файл нужно включить для использования члена.
# Значение по умолчанию: NO.

SHOW_GROUPED_MEMB_INC  = NO

# Если флаг FORCE_LOCAL_INCLUDES установлен в значение YES, то Doxygen будет
# перечислять включаемые файлы в документации с двойными кавычками вместо
# угловых скобок.
# Значение по умолчанию: NO.

FORCE_LOCAL_INCLUDES   = NO

# Если флаг INLINE_INFO установлен в значение YES, то в документацию для
# встроенных членов будет добавляться тег [inline].
# Значение по умолчанию: YES.

INLINE_INFO            = YES

# Если флаг SORT_MEMBER_DOCS установлен в значение YES, то Doxygen будет
# сортировать (подробную) документацию членов файла и класса в алфавитном
# порядке по имени члена. Если установить NO, члены будут отображаться в
# порядке объявления.
# Значение по умолчанию: YES.

SORT_MEMBER_DOCS       = YES

# Если флаг SORT_BRIEF_DOCS установлен в значение YES, то Doxygen будет
# сортировать краткие описания членов файла, пространства имен и класса в
# алфавитном порядке по имени члена. Если установить NO, члены будут
# отображаться в порядке объявления. Обратите внимание, что это также
# повлияет на порядок классов в списке классов.
# Значение по умолчанию: NO.

SORT_BRIEF_DOCS        = NO

# Если флаг SORT_MEMBERS_CTORS_1ST установлен в значение YES, то Doxygen
# будет сортировать (краткую и подробную) документацию членов класса так,
# чтобы конструкторы и деструкторы отображались первыми. Если установить NO,
# конструкторы будут отображаться в соответствующих порядках, определенных
# параметрами SORT_BRIEF_DOCS и SORT_MEMBER_DOCS.
# Примечание: Если SORT_BRIEF_DOCS установлен в NO, этот параметр игнорируется
# для сортировки краткой документации членов.
# Примечание: Если SORT_MEMBER_DOCS установлен в NO, этот параметр игнорируется
# для сортировки подробной документации членов.
# Значение по умолчанию: NO.

SORT_MEMBERS_CTORS_1ST = NO

# Если флаг SORT_GROUP_NAMES установлен в значение YES, то Doxygen будет
# сортировать иерархию имен групп в алфавитном порядке. Если установить NO,
# имена групп будут отображаться в их определенном порядке.
# Значение по умолчанию: NO.

SORT_GROUP_NAMES       = NO

# Если флаг SORT_BY_SCOPE_NAME установлен в значение YES, список классов
# будет отсортирован по полным именам, включая пространства имен. Если
# установить NO, список классов будет отсортирован только по имени класса,
# без части пространства имен.
# Примечание: Этот параметр не очень полезен, если HIDE_SCOPE_NAMES установлен
# в YES.
# Примечание: Этот параметр применяется только к списку классов, а не к
# алфавитному списку.
# Значение по умолчанию: NO.

SORT_BY_SCOPE_NAME     = NO

# Если опция STRICT_PROTO_MATCHING включена и Doxygen не удается правильно
# определить типы всех параметров функции, то Doxygen отклонит совпадение
# между прототипом и реализацией функции-члена, даже если существует только
# один кандидат или очевидно, какой кандидат выбрать, просто сопоставив
# строки. Отключив STRICT_PROTO_MATCHING, Doxygen по-прежнему примет
# совпадение между прототипом и реализацией в таких случаях.
# Значение по умолчанию: NO.

STRICT_PROTO_MATCHING  = NO
# Флаг GENERATE_TODOLIST можно использовать для включения (YES) или
# отключения (NO) списка задач. Этот список создается с помощью команд
# \todo в документации.
# Значение по умолчанию: YES.

GENERATE_TODOLIST      = YES

# Флаг GENERATE_TESTLIST можно использовать для включения (YES) или
# отключения (NO) списка тестов. Этот список создается с помощью команд
# \test в документации.
# Значение по умолчанию: YES.

GENERATE_TESTLIST      = YES

# Флаг GENERATE_BUGLIST можно использовать для включения (YES) или
# отключения (NO) списка ошибок. Этот список создается с помощью команд
# \bug в документации.
# Значение по умолчанию: YES.

GENERATE_BUGLIST       = YES

# Флаг GENERATE_DEPRECATEDLIST можно использовать для включения (YES) или
# отключения (NO) списка устаревших элементов. Этот список создается с
# помощью команд \deprecated в документации.
# Значение по умолчанию: YES.

GENERATE_DEPRECATEDLIST= YES

# Флаг ENABLED_SECTIONS можно использовать для включения условных
# секций документации, отмеченных \if <section_label> ... \endif и
# \cond <section_label> ... \endcond блоками.

ENABLED_SECTIONS       =

# Флаг MAX_INITIALIZER_LINES определяет максимальное количество строк,
# которое может иметь начальное значение переменной или макроса / define,
# чтобы оно появилось в документации. Если инициализатор состоит из
# большего количества строк, чем указано здесь, он будет скрыт. Используйте
# значение 0, чтобы полностью скрыть инициализаторы. Появление значений
# отдельных переменных и макросов / defines можно контролировать с помощью
# команд \showinitializer или \hideinitializer в документации независимо от
# этой настройки.
# Минимальное значение: 0, максимальное значение: 10000, значение по
# умолчанию: 30.

MAX_INITIALIZER_LINES  = 30

# Установите флаг SHOW_USED_FILES в значение NO, чтобы отключить список
# файлов, генерируемый внизу документации классов и структур. Если установить
# YES, в списке будут упомянуты файлы, которые использовались для генерации
# документации.
# Значение по умолчанию: YES.

SHOW_USED_FILES        = YES

# Установите флаг SHOW_FILES в значение NO, чтобы отключить генерацию
# страницы Файлы. Это удалит запись Файлы из Быстрого индекса и из
# Деревянного представления папок (если указано).
# Значение по умолчанию: YES.

SHOW_FILES             = YES

# Установите флаг SHOW_NAMESPACES в значение NO, чтобы отключить
# генерацию страницы Пространства имен. Это удалит запись Пространства имен
# из Быстрого индекса и из Деревянного представления папок (если указано).
# Значение по умолчанию: YES.

SHOW_NAMESPACES        = YES

# Флаг FILE_VERSION_FILTER можно использовать для указания программы или
# скрипта, который Doxygen должен вызвать для получения текущей версии
# каждого файла (обычно из системы контроля версий). Doxygen вызовет
# программу, выполняя команду command input-file, где command — значение
# тега FILE_VERSION_FILTER, а input-file — имя входного файла, предоставленного
# Doxygen. То, что программа пишет на стандартный вывод, используется как
# версия файла. Для примера см. документацию.

FILE_VERSION_FILTER    =

# Флаг LAYOUT_FILE можно использовать для указания файла макета, который
# будет разобран Doxygen. Файл макета управляет глобальной структурой
# сгенерированных выходных файлов независимо от формата. Чтобы создать
# файл макета, который представляет собой значения по умолчанию Doxygen,
# запустите Doxygen с опцией -l. Вы также можете указать имя файла после
# опции, если оно не указано, будет использовано имя файла макета
# DoxygenLayout.xml. См. также раздел "Изменение макета страниц" для
# получения информации.
#
# Обратите внимание, что если вы запускаете Doxygen из директории, содержащей
# файл с именем DoxygenLayout.xml, Doxygen будет разбирать его автоматически,
# даже если тег LAYOUT_FILE оставлен пустым.

LAYOUT_FILE            =

# Флаг CITE_BIB_FILES можно использовать для указания одного или нескольких
# bib файлов, содержащих определения ссылок. Это должен быть список файлов
# с расширением .bib. Расширение .bib автоматически добавляется, если не
# указано. Для этого требуется установленный инструмент bibtex. См. также
# https://en.wikipedia.org/wiki/BibTeX для получения дополнительной информации.
# Для LaTeX стиль библиографии можно контролировать с помощью LATEX_BIB_STYLE.
# Чтобы использовать эту функцию, вам нужно, чтобы bibtex и perl были доступны
# в пути поиска. См. также \cite для информации о создании ссылок.

CITE_BIB_FILES         =

# Флаг EXTERNAL_TOOL_PATH можно использовать для расширения пути поиска (переменная
# окружения PATH), чтобы внешние инструменты, такие как latex и gs, могли быть
# найдены.
# Примечание: Директории, указанные с помощью EXTERNAL_TOOL_PATH, добавляются
# перед путями, уже указанными в переменной PATH, и добавляются в указанном
# порядке.
# Примечание: Эта опция особенно полезна для macOS версии 14 (Sonoma) и
# выше, когда Doxygen запускается из Doxywizard, так как в этом случае любые
# изменения PATH, сделанные пользователем, игнорируются. Типичный пример для
# macOS — установить EXTERNAL_TOOL_PATH = /Library/TeX/texbin /usr/local/bin,
# вместе со стандартным путем, полный путь поиска, используемый doxygen при
# запуске внешних инструментов, будет
# PATH=/Library/TeX/texbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

EXTERNAL_TOOL_PATH     =

# Флаг QUIET можно использовать для включения/отключения сообщений, которые
# Doxygen генерирует в стандартный вывод. Если QUIET установлено в YES, это
# означает, что сообщения отключены.
# Значение по умолчанию: NO.

QUIET                  = NO

# Флаг WARNINGS можно использовать для включения/отключения сообщений об ошибках,
# которые Doxygen генерирует в стандартный поток ошибок (stderr). Если WARNINGS
# установлено в YES, это означает, что предупреждения включены.
#
# Советы: Включите предупреждения при написании документации.
# Значение по умолчанию: YES.

WARNINGS               = YES

# Если флаг WARN_IF_UNDOCUMENTED установлен в YES, Doxygen будет генерировать
# предупреждения для не задокументированных членов. Если EXTRACT_ALL установлен
# в YES, этот флаг автоматически отключится.
# Значение по умолчанию: YES.

WARN_IF_UNDOCUMENTED   = YES

# Если флаг WARN_IF_DOC_ERROR установлен в YES, Doxygen будет генерировать
# предупреждения о возможных ошибках в документации, таких как дублирование
# документации параметров или использование неверных команд разметки.
# Значение по умолчанию: YES.

WARN_IF_DOC_ERROR      = YES

# Если флаг WARN_IF_INCOMPLETE_DOC установлен в YES, Doxygen будет предупреждать
# о неполной документации параметров функций. Если установлено в NO, Doxygen
# примет отсутствие документации для некоторых параметров без предупреждений.
# Значение по умолчанию: YES.

WARN_IF_INCOMPLETE_DOC = YES

# Опция WARN_NO_PARAMDOC может быть включена для получения предупреждений о
# функциях, которые задокументированы, но не имеют документации для их параметров
# или возвращаемого значения. Если установлено в NO, Doxygen будет предупреждать
# только о неверной документации параметров, но не об отсутствии документации.
# Если EXTRACT_ALL установлен в YES, этот флаг автоматически отключится.
# Значение по умолчанию: NO.

WARN_NO_PARAMDOC       = NO

# Если опция WARN_IF_UNDOC_ENUM_VAL установлена в YES, Doxygen будет предупреждать
# о не задокументированных значениях перечислений. Если установлено в NO, Doxygen
# примет не задокументированные значения перечислений. Если EXTRACT_ALL установлен
# в YES, этот флаг автоматически отключится.
# Значение по умолчанию: NO.

WARN_IF_UNDOC_ENUM_VAL = NO

# Если флаг WARN_AS_ERROR установлен в YES, Doxygen немедленно остановится при
# обнаружении предупреждения. Если WARN_AS_ERROR установлен в FAIL_ON_WARNINGS,
# то Doxygen продолжит работу как при установке WARN_AS_ERROR в NO, но в конце
# процесса Doxygen вернет ненулевой статус. Если WARN_AS_ERROR установлен в
# FAIL_ON_WARNINGS_PRINT, Doxygen будет вести себя как FAIL_ON_WARNINGS, но в случае
# если WARN_LOGFILE не определен, предупреждающие сообщения будут записаны в конце
# выполнения, а не среди других сообщений, если WARN_LOGFILE определен как - т.е.
# стандартный вывод (stdout), то поведение останется как при установке FAIL_ON_WARNINGS.
# Возможные значения: NO, YES, FAIL_ON_WARNINGS и FAIL_ON_WARNINGS_PRINT.
# Значение по умолчанию: NO.

WARN_AS_ERROR          = NO

# Тег WARN_FORMAT определяет формат сообщений об ошибках, которые Doxygen может
# генерировать. Строка должна содержать теги $file, $line и $text, которые будут
# заменены на файл и номер строки, из которых возникло предупреждение, и текст
# предупреждения. Опционально формат может содержать $version, который будет
# заменен на версию файла (если она может быть получена через FILE_VERSION_FILTER).
# См. также: WARN_LINE_FORMAT
# Значение по умолчанию: $file:$line: $text.

WARN_FORMAT            = "$file:$line: $text"

# В части $text команды WARN_FORMAT может быть указана ссылка на более конкретное
# место. Чтобы упростить переход к этому месту (вне Doxygen) пользователь может
# определить свою строку "cut" / "paste".
# Пример:
# WARN_LINE_FORMAT = "'vi $file +$line'"
# См. также: WARN_FORMAT
# Значение по умолчанию: at line $line of file $file.

WARN_LINE_FORMAT       = "at line $line of file $file"

# Тег WARN_LOGFILE можно использовать для указания файла, в который должны
# записываться сообщения об ошибках и предупреждениях. Если оставить пустым,
# вывод будет записан в стандартный поток ошибок (stderr). Если указанный файл
# не может быть открыт для записи, сообщения об ошибках и предупреждениях будут
# записаны в стандартный поток ошибок. Если в качестве файла указан - , сообщения
# будут записаны в стандартный вывод (stdout).

WARN_LOGFILE           =


# Тег INPUT используется для указания файлов и/или каталогов, содержащих
# документированные исходные файлы. Вы можете ввести имена файлов, такие как
# myfile.cpp или каталоги, такие как /usr/src/myproject. Разделяйте файлы или
# каталоги пробелами. См. также FILE_PATTERNS и EXTENSION_MAPPING
# Примечание: если этот тег пуст, будет осуществляться поиск в текущем каталоге.

INPUT                  = C:/Users/mirni/Documents/udp/udp-server/translator_in_C_programming_language

# Этот тег можно использовать для указания кодировки символов исходных файлов,
# которые анализирует Doxygen. Внутренне Doxygen использует кодировку UTF-8.
# Doxygen использует libiconv (или встроенный в libc iconv) для трансформации
# кодировок. См. документацию libiconv (см.: https://www.gnu.org/software/libiconv/)
# для списка возможных кодировок.
# См. также: INPUT_FILE_ENCODING
# Значение по умолчанию: UTF-8.

INPUT_ENCODING         = UTF-8

# Этот тег можно использовать для указания кодировки символов исходных файлов,
# которые анализирует Doxygen. Тег INPUT_FILE_ENCODING можно использовать для
# указания кодировки символов для каждого шаблона файла. Doxygen будет сравнивать
# имя файла с каждым шаблоном и применять кодировку вместо значения по умолчанию
# INPUT_ENCODING, если есть совпадение. Кодировки символов — это список вида:
# шаблон=кодировка (например, *.php=ISO-8859-1).
# См. также: INPUT_ENCODING для получения дополнительной информации о поддерживаемых
# кодировках.

INPUT_FILE_ENCODING    =

# Если значение тега INPUT содержит каталоги, вы можете использовать тег FILE_PATTERNS
# для указания одного или нескольких шаблонов с подстановочными знаками (например,
# *.cpp и *.h) для фильтрации исходных файлов в каталогах.
#
# Обратите внимание, что для пользовательских расширений или не поддерживаемых
# расширений вам также нужно установить EXTENSION_MAPPING для расширения, в противном
# случае файлы не будут прочитаны Doxygen.
#
# Обратите внимание, что список проверяемых шаблонов файлов по умолчанию может
# отличаться от списка сопоставлений расширений файлов по умолчанию.
#
# Если оставить пустым, будут проверяться следующие шаблоны: *.c, *.cc, *.cxx, *.cxxm,
# *.cpp, *.cppm, *.ccm, *.c++, *.c++m, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl,
# *.idl, *.ddl, *.odl, *.h, *.hh, *.hxx, *.hpp, *.h++, *.ixx, *.l, *.cs, *.d,
# *.php, *.php4, *.php5, *.phtml, *.inc, *.m, *.markdown, *.md, *.mm, *.dox (для
# предоставления в качестве комментария C Doxygen), *.py, *.pyw, *.f90, *.f95, *.f03,
# *.f08, *.f18, *.f, *.for, *.vhd, *.vhdl, *.ucf, *.qsf и *.ice.

FILE_PATTERNS          = *.c \
                         *.cc \
                         *.cxx \
                         *.cxxm \
                         *.cpp \
                         *.cppm \
                         *.ccm \
                         *.c++ \
                         *.c++m \
                         *.java \
                         *.ii \
                         *.ixx \
                         *.ipp \
                         *.i++ \
                         *.inl \
                         *.idl \
                         *.ddl \
                         *.odl \
                         *.h \
                         *.hh \
                         *.hxx \
                         *.hpp \
                         *.h++ \
                         *.ixx \
                         *.l \
                         *.cs \
                         *.d \
                         *.php \
                         *.php4 \
                         *.php5 \
                         *.phtml \
                         *.inc \
                         *.m \
                         *.markdown \
                         *.md \
                         *.mm \
                         *.dox \
                         *.py \
                         *.pyw \
                         *.f90 \
                         *.f95 \
                         *.f03 \
                         *.f08 \
                         *.f18 \
                         *.f \
                         *.for \
                         *.vhd \
                         *.vhdl \
                         *.ucf \
                         *.qsf \
                         *.ice

# Флаг RECURSIVE можно использовать для указания, следует ли искать также в
# подкаталогах для исходных файлов.
# Значение по умолчанию: NO.

RECURSIVE              = YES

# Тег EXCLUDE можно использовать для указания файлов и/или каталогов, которые
# должны быть исключены из исходных файлов INPUT. Таким образом, вы можете
# легко исключить подкаталог из дерева каталогов, корень которого указан в теге INPUT.
#
# Обратите внимание, что относительные пути относительны к каталогу, из которого
# запущен Doxygen.

EXCLUDE                =

# Тег EXCLUDE_SYMLINKS можно использовать для выбора, следует ли исключать
# файлы или каталоги, которые являются символическими ссылками (функция файловой
# системы Unix).
# Значение по умолчанию: NO.

EXCLUDE_SYMLINKS       = NO

# Если значение тега INPUT содержит каталоги, вы можете использовать тег EXCLUDE_PATTERNS
# для указания одного или нескольких шаблонов с подстановочными знаками для исключения
# определенных файлов из этих каталогов.
#
# Обратите внимание, что шаблоны сравниваются с файлом по абсолютному пути, поэтому
# для исключения всех тестовых каталогов, например, используйте шаблон */test/*.

EXCLUDE_PATTERNS       =

# Тег EXCLUDE_SYMBOLS можно использовать для указания одного или нескольких имен
# символов (пространства имен, классы, функции и т.д.), которые должны быть исключены
# из вывода. Имя символа может быть полностью квалифицированным именем, словом или, если
# используется подстановочный знак *, подстрокой. Примеры: ANamespace, AClass,
# ANamespace::AClass, ANamespace::*Test

EXCLUDE_SYMBOLS        =

# Тег EXAMPLE_PATH можно использовать для указания одного или нескольких файлов или
# каталогов, которые содержат фрагменты примерного кода, которые будут включены
# (см. команду \include).

EXAMPLE_PATH           =

# Если значение тега EXAMPLE_PATH содержит каталоги, вы можете использовать тег
# EXAMPLE_PATTERNS для указания одного или нескольких шаблонов с подстановочными
# знаками (например, *.cpp и *.h) для фильтрации исходных файлов в каталогах.
# Если оставить пустым, все файлы будут включены.

EXAMPLE_PATTERNS       = *

# Если флаг EXAMPLE_RECURSIVE установлен в YES, то подкаталоги будут искать
# исходные файлы для использования с командами \include или \dontinclude,
# независимо от значения тега RECURSIVE.
# Значение по умолчанию: NO.

EXAMPLE_RECURSIVE      = NO

# Тег IMAGE_PATH можно использовать для указания одного или нескольких файлов или
# каталогов, которые содержат изображения, которые должны быть включены в документацию
# (см. команду \image).

IMAGE_PATH             =

# Тег INPUT_FILTER можно использовать для указания программы, которую Doxygen должен
# вызвать для фильтрации каждого входного файла. Doxygen вызовет программу фильтра
# через выполнение (с помощью popen()) команды:
#
# <filter> <input-file>
#
# где <filter> — это значение тега INPUT_FILTER, а <input-file> — это имя входного
# файла. Затем Doxygen использует вывод, который программа фильтра пишет в стандартный
# вывод. Если FILTER_PATTERNS указан, этот тег будет игнорироваться.
#
# Обратите внимание, что фильтр не должен добавлять или удалять строки; он применяется
# до сканирования кода, но не при создании выходного кода. Если строки добавляются
# или удаляются, якоря не будут размещены корректно.
#
# Обратите внимание, что Doxygen будет использовать данные, обработанные и записанные
# в стандартный вывод для дальнейшей обработки, поэтому ничего другого, например,
# отладочные операторы или используемые команды (поэтому в случае с пакетным файлом
# Windows всегда используйте @echo OFF), не должно быть записано в стандартный вывод.
#
# Обратите внимание, что для пользовательских расширений или не поддерживаемых
# расширений вам также нужно установить EXTENSION_MAPPING для расширения, в противном
# случае файлы не будут правильно обработаны Doxygen.

INPUT_FILTER           =

# Тег FILTER_PATTERNS можно использовать для указания фильтров для каждого
# шаблона файла. Doxygen будет сравнивать имя файла с каждым шаблоном и применять
# фильтр, если шаблон совпадает. Фильтры представляют собой список вида:
# pattern=filter (например, *.cpp=my_cpp_filter). См. INPUT_FILTER для получения
# дополнительной информации о том, как используются фильтры. Если тег FILTER_PATTERNS
# пуст или если ни один из шаблонов не совпадает с именем файла, применяется INPUT_FILTER.
#
# Обратите внимание, что для пользовательских расширений или не поддерживаемых
# расширений вам также нужно установить EXTENSION_MAPPING для расширения, иначе файлы
# не будут правильно обработаны Doxygen.

FILTER_PATTERNS        =

# Если тег FILTER_SOURCE_FILES установлен в YES, то фильтр ввода (если установлен
# с помощью INPUT_FILTER) также будет использоваться для фильтрации входных файлов,
# которые используются для создания исходных файлов для просмотра (т.е. когда SOURCE_BROWSER
# установлен в YES).
# Значение по умолчанию: NO.

FILTER_SOURCE_FILES    = NO

# Тег FILTER_SOURCE_PATTERNS можно использовать для указания фильтров источников
# для каждого шаблона файла. Шаблон переопределяет настройку FILTER_PATTERN (если
# таковая имеется), и также можно отключить фильтрацию источников для конкретного
# шаблона, используя *.ext= (т.е. без указания фильтра).
# Этот тег требует, чтобы тег FILTER_SOURCE_FILES был установлен в YES.

FILTER_SOURCE_PATTERNS =

# Если тег USE_MDFILE_AS_MAINPAGE ссылается на имя файла markdown, который является
# частью входных данных, его содержимое будет размещено на главной странице
# (index.html). Это может быть полезно, если у вас есть проект на GitHub, например,
# и вы хотите использовать страницу введения также для вывода Doxygen.

USE_MDFILE_AS_MAINPAGE =

# Стандарт Fortran указывает, что для фиксированного форматирования кода Fortran
# все символы с позиции 72 должны считаться комментарием. Распространенным
# расширением является возможность использования более длинных строк перед началом
# автоматического комментария. Настройка FORTRAN_COMMENT_AFTER также сделает
# возможным обработку более длинных строк перед началом автоматического комментария.
# Минимальное значение: 7, максимальное значение: 10000, значение по умолчанию: 72.

FORTRAN_COMMENT_AFTER  = 72

#---------------------------------------------------------------------------
# Configuration options related to source browsing
#---------------------------------------------------------------------------

# Если тег SOURCE_BROWSER установлен в YES, то будет сгенерирован список исходных файлов.
# Документированные сущности будут перекрестно ссылаться с этими источниками.
#
# Примечание: Чтобы избавиться от всего исходного кода в сгенерированном выводе,
# убедитесь, что также установлено VERBATIM_HEADERS в NO.
# Значение по умолчанию: NO.

SOURCE_BROWSER         = NO

# Установка тега INLINE_SOURCES в YES будет включать тело функций, многострочные
# макросы, перечисления или переменные, инициализированные списком, непосредственно в
# документацию.
# Значение по умолчанию: NO.

INLINE_SOURCES         = NO

# Установка тега STRIP_CODE_COMMENTS в YES будет указывать Doxygen скрывать любые
# специальные блоки комментариев из сгенерированных фрагментов исходного кода.
# Обычные комментарии C, C++ и Fortran всегда останутся видимыми.
# Значение по умолчанию: YES.

STRIP_CODE_COMMENTS    = YES

# Если тег REFERENCED_BY_RELATION установлен в YES, то для каждой документированной
# сущности будут перечислены все документированные функции, ссылающиеся на нее.
# Значение по умолчанию: NO.

REFERENCED_BY_RELATION = NO

# Если тег REFERENCES_RELATION установлен в YES, то для каждой документированной функции
# будут перечислены все документированные сущности, которые вызываются/используются этой
# функцией.
# Значение по умолчанию: NO.

REFERENCES_RELATION    = NO

# Если тег REFERENCES_LINK_SOURCE установлен в YES и тег SOURCE_BROWSER установлен
# в YES, то гиперссылки из функций в списках REFERENCES_RELATION и REFERENCED_BY_RELATION
# будут ссылаться на исходный код. В противном случае они будут ссылаться на документацию.
# Значение по умолчанию: YES.

REFERENCES_LINK_SOURCE = YES

# Если SOURCE_TOOLTIPS включен (по умолчанию), то при наведении курсора на гиперссылку
# в исходном коде будет отображаться всплывающая подсказка с дополнительной информацией,
# такой как прототип, краткое описание и ссылки на определение и документацию. Поскольку
# это увеличит размер HTML-файла и загрузка больших файлов может быть немного медленнее,
# вы можете отключить эту функцию.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег SOURCE_BROWSER был установлен в YES.

SOURCE_TOOLTIPS        = YES

# Если тег USE_HTAGS установлен в YES, то ссылки на исходный код будут указывать
# на HTML, сгенерированный инструментом htags(1), вместо встроенного браузера исходного
# кода Doxygen. Инструмент htags является частью системы тегирования исходного кода GNU
# (см. https://www.gnu.org/software/global/global.html). Вам потребуется версия
# 4.8.6 или выше.
#
# Чтобы использовать его, выполните следующие шаги:
# - Установите последнюю версию global
# - Включите SOURCE_BROWSER и USE_HTAGS в конфигурационном файле
# - Убедитесь, что INPUT указывает на корень дерева исходного кода
# - Запустите doxygen как обычно
#
# Doxygen вызовет htags (а тот, в свою очередь, вызовет gtags), поэтому эти
# инструменты должны быть доступны из командной строки (т.е. в поисковом пути).
#
# Результат: вместо браузера исходного кода, созданного Doxygen, ссылки на
# исходный код теперь будут указывать на вывод htags.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег SOURCE_BROWSER был установлен в YES.

USE_HTAGS              = NO

# Если тег VERBATIM_HEADERS установлен в YES, то Doxygen будет генерировать
# дословную копию заголовочного файла для каждого класса, для которого указан
# include. Установите в NO, чтобы отключить это.
# См. также: Раздел \class.
# Значение по умолчанию: YES.

VERBATIM_HEADERS       = YES

# Если тег CLANG_ASSISTED_PARSING установлен в YES, то Doxygen будет использовать
# парсер clang (см.: http://clang.llvm.org/) для более точного разбора за счет
# снижения производительности. Это может быть особенно полезно для кода C++,
# насыщенного шаблонами, для которого встроенный парсер Doxygen не имеет
# необходимой информации о типах.
# Примечание: доступность этой опции зависит от того, был ли Doxygen сгенерирован
# с параметром -Duse_libclang=ON для CMake.
# Значение по умолчанию: NO.

CLANG_ASSISTED_PARSING = NO

# Если тег CLANG_ASSISTED_PARSING установлен в YES и тег CLANG_ADD_INC_PATHS
# установлен в YES, то Doxygen добавит директорию каждого ввода в путь включения.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег CLANG_ASSISTED_PARSING был установлен в YES.

CLANG_ADD_INC_PATHS    = YES

# Если включено сопутствующее разбор clang, вы можете предоставить компилятору
# параметры командной строки, которые вы обычно используете при вызове компилятора.
# Обратите внимание, что пути включения будут уже установлены Doxygen для файлов и
# директорий, указанных в INPUT и INCLUDE_PATH.
# Этот тег требует, чтобы тег CLANG_ASSISTED_PARSING был установлен в YES.

CLANG_OPTIONS          =

# Если включен сопутствующий разбор clang, вы можете предоставить парсеру clang путь
# к директории, содержащей файл под названием compile_commands.json. Этот файл является
# базой данных компиляции (см.: http://clang.llvm.org/docs/HowToSetupToolingForLLVM.html),
# содержащей параметры, используемые при сборке исходных файлов. Это эквивалентно
# указанию опции -p для инструмента clang, такого как clang-check. Эти параметры
# будут переданы парсеру. Любые параметры, указанные с помощью CLANG_OPTIONS, также будут
# добавлены.
# Примечание: доступность этой опции зависит от того, был ли Doxygen сгенерирован с
# параметром -Duse_libclang=ON для CMake.

CLANG_DATABASE_PATH    =

#---------------------------------------------------------------------------
# Configuration options related to the alphabetical class index
#---------------------------------------------------------------------------

# Если тег ALPHABETICAL_INDEX установлен в YES, будет сгенерирован алфавитный индекс
# всех компаундов. Включите это, если проект содержит много классов, структур, объединений
# или интерфейсов.
# Значение по умолчанию: YES.

ALPHABETICAL_INDEX     = YES

# Тег IGNORE_PREFIX можно использовать для указания префикса (или списка префиксов),
# которые следует игнорировать при генерации индексов заголовков. Тег IGNORE_PREFIX
# работает для имен классов, функций и членов. Сущность будет помещена в алфавитный
# список под первой буквой имени сущности, которая остается после удаления префикса.
# Этот тег требует, чтобы тег ALPHABETICAL_INDEX был установлен в YES.

IGNORE_PREFIX          =

#---------------------------------------------------------------------------
# Configuration options related to the HTML output
#---------------------------------------------------------------------------

# Если тег GENERATE_HTML установлен в YES, то Doxygen будет генерировать HTML-вывод.
# Значение по умолчанию: YES.

GENERATE_HTML          = YES

# Тег HTML_OUTPUT используется для указания, где будут размещены HTML-документы.
# Если указать относительный путь, значение OUTPUT_DIRECTORY будет добавлено перед ним.
# Значение по умолчанию: html.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_OUTPUT            = html

# Тег HTML_FILE_EXTENSION можно использовать для указания расширения файла для каждой
# сгенерированной HTML-страницы (например: .htm, .php, .asp).
# Значение по умолчанию: .html.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_FILE_EXTENSION    = .html

# Тег HTML_HEADER можно использовать для указания пользовательского HTML-заголовка
# для каждой сгенерированной HTML-страницы. Если тег оставлен пустым, Doxygen будет
# генерировать стандартный заголовок.
#
# Чтобы получить действительный HTML, заголовочный файл должен включать все скрипты и
# таблицы стилей, необходимые Doxygen, которые зависят от используемых параметров
# конфигурации (например, настройки GENERATE_TREEVIEW). Настоятельно рекомендуется
# начать с заголовка по умолчанию с помощью команды
# doxygen -w html new_header.html new_footer.html new_stylesheet.css YourConfigFile
# и затем изменить файл new_header.html. См. также раздел "Использование Doxygen" для
# информации о том, как сгенерировать заголовок по умолчанию, который обычно используется
# Doxygen.
# Примечание: Заголовок может изменяться, поэтому обычно необходимо регенерировать
# заголовок по умолчанию при обновлении до новой версии Doxygen. Для описания возможных
# маркеров и имен блоков см. документацию.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_HEADER            =

# Тег HTML_FOOTER можно использовать для указания пользовательского HTML-футера
# для каждой сгенерированной HTML-страницы. Если тег оставлен пустым, Doxygen будет
# генерировать стандартный футер. См. HTML_HEADER для получения дополнительной информации
# о том, как сгенерировать футер по умолчанию и какие специальные команды можно использовать
# внутри футера. См. также раздел "Использование Doxygen" для информации о том, как
# сгенерировать футер по умолчанию, который обычно используется Doxygen.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_FOOTER            =

# Тег HTML_STYLESHEET можно использовать для указания пользовательского каскадного
# стиля, который используется на каждой HTML-странице. Его можно использовать для
# тонкой настройки внешнего вида HTML-вывода. Если оставить пустым, Doxygen будет
# генерировать стандартную таблицу стилей.
# См. также раздел "Использование Doxygen" для информации о том, как сгенерировать
# таблицу стилей, которую обычно использует Doxygen.
# Примечание: Рекомендуется использовать HTML_EXTRA_STYLESHEET вместо этого тега,
# так как он более надежен, и этот тег (HTML_STYLESHEET) в будущем станет устаревшим.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_STYLESHEET        =

# Тег HTML_EXTRA_STYLESHEET можно использовать для указания дополнительных
# пользовательских каскадных стилей, которые включаются после стандартных таблиц стилей,
# созданных Doxygen. Используя эту опцию, можно переопределить определенные аспекты стиля.
# Это предпочтительнее, чем использование HTML_STYLESHEET, так как не заменяет стандартную
# таблицу стилей и поэтому более надежен к будущим обновлениям.
# Doxygen скопирует файлы стилей в выходной каталог.
# Примечание: Порядок дополнительных файлов стилей имеет значение (например, последний
# файл стиля в списке переопределяет настройки предыдущих).
# Примечание: Поскольку стилизация полос прокрутки в настоящее время не может быть переопределена
# в Webkit/Chromium, стилизация будет исключена из стандартного doxygen.css, если указаны один
# или несколько дополнительных стилей. Поэтому, если требуется настройка полос прокрутки,
# ее нужно добавить явно. Пример см. в документации.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_EXTRA_STYLESHEET  =

# Тег HTML_EXTRA_FILES можно использовать для указания одного или нескольких дополнительных
# изображений или других исходных файлов, которые должны быть скопированы в каталог HTML-вывода.
# Обратите внимание, что эти файлы будут скопированы в базовый каталог HTML-вывода. Используйте
# маркер $relpath^ в файлах HTML_HEADER и/или HTML_FOOTER для загрузки этих файлов. В файле
# HTML_STYLESHEET используйте только имя файла. Также обратите внимание, что файлы будут скопированы
# как есть; команд или маркеров нет.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_EXTRA_FILES       =

# Тег HTML_COLORSTYLE можно использовать для указания, должен ли сгенерированный HTML-вывод
# отображаться с темной или светлой темой.
# Возможные значения: LIGHT всегда генерирует вывод светлого режима, DARK всегда
# генерирует вывод темного режима, AUTO_LIGHT автоматически устанавливает режим в
# зависимости от предпочтений пользователя, использует светлый режим, если предпочтения
# не установлены (по умолчанию), AUTO_DARK автоматически устанавливает режим в зависимости
# от предпочтений пользователя, использует темный режим, если предпочтения не установлены
# и TOGGLE позволяет пользователю переключаться между светлым и темным режимом с помощью
# кнопки.
# Значение по умолчанию: AUTO_LIGHT.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_COLORSTYLE        = AUTO_LIGHT

# Тег HTML_COLORSTYLE_HUE управляет цветом HTML-вывода. Doxygen
# будет настраивать цвета в таблице стилей и фоновом изображении в соответствии с
# этим цветом. Оттенок указывается как угол на цветовом круге, см.
# https://en.wikipedia.org/wiki/Hue для получения дополнительной информации. Например,
# значение 0 представляет красный, 60 - желтый, 120 - зеленый, 180 - циан, 240 - синий,
# 300 - пурпурный, и 360 снова красный.
# Минимальное значение: 0, максимальное значение: 359, значение по умолчанию: 220.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_COLORSTYLE_HUE    = 220

# Тег HTML_COLORSTYLE_SAT управляет чистотой (или насыщенностью) цветов в HTML-выводе.
# Значение 0 будет использовать только градации серого. Значение 255 приведет к самым
# ярким цветам.
# Минимальное значение: 0, максимальное значение: 255, значение по умолчанию: 100.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_COLORSTYLE_SAT    = 100

# Тег HTML_COLORSTYLE_GAMMA управляет коррекцией гаммы, применяемой к компоненту
# яркости цветов в HTML-выводе. Значения ниже 100 постепенно делают вывод светлее,
# тогда как значения выше 100 делают вывод темнее. Значение, деленное на 100, является
# фактической гаммой, поэтому 80 представляет гамму 0.8, значение 220 представляет гамму
# 2.2, а 100 не изменяет гамму.
# Минимальное значение: 40, максимальное значение: 240, значение по умолчанию: 80.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_COLORSTYLE_GAMMA  = 80

# Если тег HTML_DYNAMIC_MENUS установлен в YES, то сгенерированная HTML-документация
# будет содержать основной индекс с вертикальными навигационными меню, которые
# динамически создаются с помощью JavaScript. Если отключено, индекс навигации будет
# состоять из нескольких уровней вкладок, которые статически встроены в каждую HTML-страницу.
# Отключите эту опцию, чтобы поддерживать браузеры, которые не поддерживают JavaScript,
# такие как браузер справки Qt.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_DYNAMIC_MENUS     = YES

# Если тег HTML_DYNAMIC_SECTIONS установлен в YES, то сгенерированная HTML-документация
# будет содержать разделы, которые можно скрывать и отображать после загрузки страницы.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_DYNAMIC_SECTIONS  = NO

# Если тег HTML_CODE_FOLDING установлен в YES, то классы и функции могут быть
# динамически свернуты и развернуты в сгенерированном HTML исходном коде.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_CODE_FOLDING      = YES
# Если тег HTML_COPY_CLIPBOARD установлен в YES, то Doxygen будет показывать значок в
# верхнем правом углу фрагментов кода и текста, который позволяет пользователю скопировать
# его содержимое в буфер обмена. Обратите внимание, что это работает только в том случае,
# если это поддерживается браузером и веб-страница обслуживается через безопасный контекст
# (см.: https://www.w3.org/TR/secure-contexts/), т.е. с использованием протокола https: или
# file:.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_COPY_CLIPBOARD    = YES

# Doxygen сохраняет несколько настроек постоянно в браузере (например, с помощью
# cookies). По умолчанию эти настройки применяются ко всем HTML-страницам, сгенерированным
# Doxygen для всех проектов. Тег HTML_PROJECT_COOKIE можно использовать для хранения
# настроек под специфическим ключом проекта, таким образом предпочтения пользователя будут
# сохраняться отдельно.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_PROJECT_COOKIE    =

# С помощью HTML_INDEX_NUM_ENTRIES можно контролировать предпочтительное количество записей,
# показанных в различных индексах с деревовидной структурой изначально; пользователь может
# расширять и сворачивать записи динамически позже. Doxygen расширит дерево до такого уровня,
# что будет видно не более указанного числа записей (если только полностью свернутое дерево
# уже не превышает это количество). Поэтому установка числа записей равного 1 приведет к
# полностью свернутому дереву по умолчанию. 0 - специальное значение, представляющее бесконечное
# количество записей и приведет к полностью развернутому дереву по умолчанию.
# Минимальное значение: 0, максимальное значение: 9999, значение по умолчанию: 100.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_INDEX_NUM_ENTRIES = 100
# Если тег GENERATE_DOCSET установлен в YES, будут созданы дополнительные индексные файлы,
# которые можно использовать в интегрированной среде разработки Apple Xcode 3 (см.:
# https://developer.apple.com/xcode/), представленном в OSX 10.5 (Leopard). Для создания
# набора документации Doxygen создаст Makefile в каталоге HTML-вывода. Запуск команды make
# создаст docset в этом каталоге, а команда make install установит docset в
# ~/Library/Developer/Shared/Documentation/DocSets, чтобы Xcode нашел его при запуске. См.
# https://developer.apple.com/library/archive/featuredarticles/DoxygenXcode/_index.html для
# получения дополнительной информации.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

GENERATE_DOCSET        = NO

# Этот тег определяет имя ленты docset. Лента документации предоставляет
# объединение для нескольких наборов документации от одного поставщика
# (например, компании или набора продуктов).
# Значение по умолчанию: Doxygen generated docs.
# Этот тег требует, чтобы тег GENERATE_DOCSET был установлен в YES.

DOCSET_FEEDNAME        = "Doxygen generated docs"

# Этот тег определяет URL ленты docset. Лента документации предоставляет
# объединение для нескольких наборов документации от одного поставщика.
# Этот тег требует, чтобы тег GENERATE_DOCSET был установлен в YES.

DOCSET_FEEDURL         =

# Этот тег указывает строку, которая должна уникально идентифицировать пакет
# набора документации. Это должна быть строка в стиле обратного доменного имени,
# например com.mycompany.MyDocSet. Doxygen добавит .docset к имени.
# Значение по умолчанию: org.doxygen.Project.
# Этот тег требует, чтобы тег GENERATE_DOCSET был установлен в YES.

DOCSET_BUNDLE_ID       = org.doxygen.Project

# Тег DOCSET_PUBLISHER_ID указывает строку, которая должна уникально идентифицировать
# издателя документации. Это должна быть строка в стиле обратного доменного имени,
# например com.mycompany.MyDocSet.documentation.
# Значение по умолчанию: org.doxygen.Publisher.
# Этот тег требует, чтобы тег GENERATE_DOCSET был установлен в YES.

DOCSET_PUBLISHER_ID    = org.doxygen.Publisher

# Тег DOCSET_PUBLISHER_NAME определяет издателя документации.
# Значение по умолчанию: Publisher.
# Этот тег требует, чтобы тег GENERATE_DOCSET был установлен в YES.

DOCSET_PUBLISHER_NAME  = Publisher

# Если тег GENERATE_HTMLHELP установлен в YES, то Doxygen создаст три дополнительных
# HTML индексных файла: index.hhp, index.hhc и index.hhk. Файл index.hhp - это
# проектный файл, который может быть прочитан инструментом Microsoft HTML Help Workshop
# на Windows. В начале 2021 года Microsoft сделала оригинальную страницу с ссылками
# на скачивание недоступной (инструмент HTML Help Workshop уже много лет находится в
# режиме поддержки). Вы можете скачать HTML Help Workshop из веб-архивов по адресу
# (см.: http://web.archive.org/web/20160201063255/http://download.microsoft.com/download/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe).
#
# HTML Help Workshop содержит компилятор, который может преобразовать весь HTML-вывод,
# сгенерированный Doxygen, в один скомпилированный HTML-файл (.chm). Скомпилированные HTML
# файлы теперь используются как формат справки Windows 98 и заменят старый формат справки
# Windows (.hlp) на всех платформах Windows в будущем. Сжатые HTML файлы также содержат
# индекс, таблицу содержания и возможность поиска по документации. HTML Workshop также
# содержит просмотрщик для сжатых HTML файлов.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

GENERATE_HTMLHELP      = NO

# Тег CHM_FILE можно использовать для указания имени файла результирующего .chm.
# Вы можете добавить путь к файлу, если результат не должен записываться в каталог html вывода.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.

CHM_FILE               =

# Тег HHC_LOCATION можно использовать для указания местоположения (абсолютный путь
# с именем файла) компилятора справки HTML (hhc.exe). Если поле не пустое,
# Doxygen попытается запустить компилятор справки HTML на сгенерированном index.hhp.
# Файл должен быть указан с полным путем.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.

HHC_LOCATION           =

# Флаг GENERATE_CHI управляет тем, будет ли сгенерирован отдельный файл индекса .chi
# (YES) или он должен быть включен в основной файл .chm (NO).
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.

GENERATE_CHI           = NO

# Тег CHM_INDEX_ENCODING используется для кодирования HtmlHelp индекса (hhk), содержания (hhc)
# и проекта.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.


CHM_INDEX_ENCODING     =
# Флаг BINARY_TOC управляет тем, будет ли сгенерирован бинарный список содержания
# (YES) или обычный список содержания (NO) в файле .chm. Кроме того, он включает
# кнопки «Предыдущий» и «Следующий».
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.

BINARY_TOC             = NO

# Флаг TOC_EXPAND можно установить в YES, чтобы добавить дополнительные элементы для
# членов группы в таблицу содержания документации HTML Help и в древовидное представление.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTMLHELP был установлен в YES.

TOC_EXPAND             = NO

# Тег SITEMAP_URL используется для указания полного URL места, где
# сгенерированная документация будет размещена на сервере пользователем в процессе
# развертывания документации. Сгенерированная карта сайта называется sitemap.xml
# и размещается в каталоге, указанном в HTML_OUTPUT. Если SITEMAP_URL не указан,
# карта сайта не создается. Для получения информации о протоколе карты сайта см.
# https://www.sitemaps.org
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

SITEMAP_URL            =

# Если тег GENERATE_QHP установлен в YES и оба тега QHP_NAMESPACE и
# QHP_VIRTUAL_FOLDER установлены, будет создан дополнительный индексный файл, который
# можно использовать в Qt's qhelpgenerator для создания сжатой справки Qt (.qch) из
# сгенерированной HTML документации.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

GENERATE_QHP           = NO

# Если указан тег QHG_LOCATION, тег QCH_FILE можно использовать для указания
# имени результирующего .qch файла. Указанный путь относительно папки HTML вывода.
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QCH_FILE               =

# Тег QHP_NAMESPACE указывает пространство имен, которое следует использовать при
# создании вывода проекта Qt Help. Для получения дополнительной информации см.
# Qt Help Project / Namespace (см.: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).
# Значение по умолчанию: org.doxygen.Project.
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHP_NAMESPACE          = org.doxygen.Project

# Тег QHP_VIRTUAL_FOLDER указывает виртуальную папку, которую следует использовать при
# создании вывода проекта Qt Help. Для получения дополнительной информации см.
# Qt Help Project / Virtual Folders (см.: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-folders).
# Значение по умолчанию: doc.
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHP_VIRTUAL_FOLDER     = doc

# Если установлен тег QHP_CUST_FILTER_NAME, он указывает имя пользовательского фильтра,
# который следует добавить. Для получения дополнительной информации см.
# Qt Help Project / Custom Filters (см.: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHP_CUST_FILTER_NAME   =

# Тег QHP_CUST_FILTER_ATTRS указывает список атрибутов пользовательского фильтра,
# который следует добавить. Для получения дополнительной информации см.
# Qt Help Project / Custom Filters (см.: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHP_CUST_FILTER_ATTRS  =

# Тег QHP_SECT_FILTER_ATTRS указывает список атрибутов, которым соответствует раздел
# фильтра проекта. Qt Help Project / Filter Attributes (см.: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHP_SECT_FILTER_ATTRS  =

# Тег QHG_LOCATION можно использовать для указания местоположения (абсолютный путь
# с именем файла) Qt's qhelpgenerator. Если поле не пустое, Doxygen попытается
# запустить qhelpgenerator на сгенерированном файле .qhp.
# Этот тег требует, чтобы тег GENERATE_QHP был установлен в YES.

QHG_LOCATION           =

# Если тег GENERATE_ECLIPSEHELP установлен в YES, будут сгенерированы дополнительные
# индексные файлы, вместе с HTML файлами они формируют плагин справки для Eclipse. Чтобы
# установить этот плагин и сделать его доступным в меню содержания справки в Eclipse,
# содержимое каталога, содержащего HTML и XML файлы, нужно скопировать в каталог плагинов
# Eclipse. Имя каталога в каталоге плагинов должно совпадать с значением ECLIPSE_DOC_ID.
# После копирования Eclipse нужно перезапустить, чтобы справка появилась.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

GENERATE_ECLIPSEHELP   = NO

# Уникальный идентификатор для плагина справки Eclipse. При установке плагина
# имя каталога, содержащего HTML и XML файлы, должно также иметь это имя. Каждому набору
# документации следует иметь свой собственный идентификатор.
# Значение по умолчанию: org.doxygen.Project.
# Этот тег требует, чтобы тег GENERATE_ECLIPSEHELP был установлен в YES.

ECLIPSE_DOC_ID         = org.doxygen.Project
# Если вы хотите полный контроль над макетом сгенерированных HTML-страниц, может потребоваться
# отключить индекс и заменить его собственным. Тег DISABLE_INDEX можно использовать для включения/выключения
# сжатого индекса (вкладок) в верхней части каждой HTML-страницы. Значение NO включает индекс, а значение YES
# отключает его. Поскольку вкладки в индексе содержат ту же информацию, что и древовидная структура навигации,
# вы можете установить эту опцию в YES, если также установите GENERATE_TREEVIEW в YES.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

DISABLE_INDEX          = NO

# Тег GENERATE_TREEVIEW используется для указания, следует ли генерировать древовидную структуру индекса
# для отображения иерархической информации. Если значение тега установлено в YES, будет сгенерирована боковая
# панель, содержащая древовидную структуру индекса (такую же, как и та, что генерируется для HTML Help). Для этого
# требуется браузер, поддерживающий JavaScript, DHTML, CSS и фреймы (т.е. любой современный браузер). Пользователи
# Windows, вероятно, предпочтут использовать функцию HTML help. Через пользовательские таблицы стилей (см. HTML_EXTRA_STYLESHEET)
# можно дополнительно настроить внешний вид индекса (см. "Настройка вывода"). Например, таблица стилей по умолчанию, сгенерированная
# Doxygen, содержит пример, который показывает, как поместить изображение в корень дерева вместо PROJECT_NAME.
# Поскольку дерево содержит ту же информацию, что и вкладочный индекс, вы можете рассмотреть возможность установки
# DISABLE_INDEX в YES при включении этой опции.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

GENERATE_TREEVIEW      = NO

# Когда оба тега GENERATE_TREEVIEW и DISABLE_INDEX установлены в YES, тогда опция FULL_SIDEBAR определяет,
# следует ли ограничить боковую панель только областью дерева (значение NO) или она должна расширяться на всю
# высоту окна (значение YES). Установка этого значения в YES дает макет, аналогичный
# https://docs.readthedocs.io с большим пространством для содержимого, но меньшим пространством для
# логотипа проекта, заголовка и описания. Если один из тегов GENERATE_TREEVIEW или DISABLE_INDEX установлен в NO,
# этот параметр не имеет эффекта.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

FULL_SIDEBAR           = NO

# Тег ENUM_VALUES_PER_LINE можно использовать для установки количества значений enum, которые
# Doxygen будет группировать в одной строке в сгенерированной HTML-документации.
#
# Обратите внимание, что значение 0 полностью подавит отображение значений enum
# в разделе обзора.
# Минимальное значение: 0, максимальное значение: 20, значение по умолчанию: 4.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

ENUM_VALUES_PER_LINE   = 4

# Когда тег SHOW_ENUM_VALUES установлен, doxygen будет отображать указанные значения перечисления
# рядом с мнемониками перечисления.
# Значение по умолчанию: NO.

SHOW_ENUM_VALUES       = NO

# Если древовидное представление включено (см. GENERATE_TREEVIEW), этот тег можно использовать
# для установки начальной ширины (в пикселях) фрейма, в котором отображается дерево.
# Минимальное значение: 0, максимальное значение: 1500, значение по умолчанию: 250.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

TREEVIEW_WIDTH         = 250

# Если опция EXT_LINKS_IN_WINDOW установлена в YES, Doxygen будет открывать ссылки на внешние символы,
# импортированные через файлы тегов, в отдельном окне.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

EXT_LINKS_IN_WINDOW    = NO

# Если тег OBFUSCATE_EMAILS установлен в YES, Doxygen будет обфусцировать адреса электронной почты.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

OBFUSCATE_EMAILS       = YES

# Если опция HTML_FORMULA_FORMAT установлена в svg, Doxygen будет использовать инструмент pdf2svg
# (см. https://github.com/dawbarton/pdf2svg) или inkscape (см. https://inkscape.org) для генерации
# формул в виде изображений SVG вместо PNG для HTML-вывода. Эти изображения обычно выглядят лучше при масштабировании.
# Возможные значения: png (по умолчанию) и svg (выглядит лучше, но требует инструмента pdf2svg или inkscape).
# Значение по умолчанию: png.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

HTML_FORMULA_FORMAT    = png

# Используйте этот тег для изменения размера шрифта формул LaTeX, включенных в виде изображений в HTML-документацию.
# Когда вы изменяете размер шрифта после успешного выполнения Doxygen, вам нужно вручную удалить любые изображения form_*.png
# из каталога HTML вывода, чтобы заставить их быть заново сгенерированными.
# Минимальное значение: 8, максимальное значение: 50, значение по умолчанию: 10.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

FORMULA_FONTSIZE       = 10

# Тег FORMULA_MACROFILE может содержать команды LaTeX \newcommand и \renewcommand для
# создания новых команд LaTeX, которые можно использовать в формулах в качестве строительных блоков. См.
# раздел "Включение формул" для получения подробной информации.

FORMULA_MACROFILE      =
# Включите опцию USE_MATHJAX, чтобы отрисовывать формулы LaTeX с помощью MathJax (см. 
# https://www.mathjax.org), который использует JavaScript на стороне клиента для отрисовки
# вместо предварительно отрисованных растровых изображений. Используйте это, если у вас не установлен
# LaTeX или если вы хотите, чтобы формулы выглядели лучше в HTML-выводе. При включении вам также может
# потребоваться установить MathJax отдельно и настроить путь к нему с помощью опции MATHJAX_RELPATH.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

USE_MATHJAX            = NO

# С помощью MATHJAX_VERSION можно указать версию MathJax, которая будет использоваться.
# Обратите внимание, что различные версии MathJax имеют разные требования
# к настройкам, поэтому возможно, что также потребуется изменить и другие настройки MathJax при переходе
# между различными версиями MathJax.
# Возможные значения: MathJax_2 и MathJax_3.
# Значение по умолчанию: MathJax_2.
# Этот тег требует, чтобы тег USE_MATHJAX был установлен в YES.

MATHJAX_VERSION        = MathJax_2

# Когда MathJax включен, вы можете установить формат вывода, который будет использоваться для
# вывода MathJax. Подробнее о формате вывода см. MathJax версии 2 (см.:
# http://docs.mathjax.org/en/v2.7-latest/output.html) и MathJax версии 3
# (см.: http://docs.mathjax.org/en/latest/web/components/output.html).
# Возможные значения: HTML-CSS (что медленнее, но имеет лучшую совместимость. Это название для Mathjax
# версии 2, для MathJax версии 3 это будет переведено в chtml), NativeMML (т.е. MathML. Поддерживается только
# для MathJax 2. Для MathJax версии 3 будет использоваться chtml), chtml (это название для Mathjax версии 3, для
# MathJax версии 2 это будет переведено в HTML-CSS) и SVG.
# Значение по умолчанию: HTML-CSS.
# Этот тег требует, чтобы тег USE_MATHJAX был установлен в YES.

MATHJAX_FORMAT         = HTML-CSS

# Когда MathJax включен, вы должны указать расположение относительно каталога HTML
# вывода с помощью опции MATHJAX_RELPATH. Каталог назначения должен содержать скрипт MathJax.js.
# Например, если каталог mathjax расположен на том же уровне, что и каталог HTML-вывода, то
# MATHJAX_RELPATH должен быть ../mathjax. Значение по умолчанию указывает на сеть доставки контента (CDN) MathJax,
# так что вы можете быстро увидеть результат без установки MathJax. Тем не менее, настоятельно рекомендуется
# установить локальную копию MathJax с сайта https://www.mathjax.org перед развертыванием. Значение по умолчанию:
# - в случае MathJax версии 2: https://cdn.jsdelivr.net/npm/mathjax@2
# - в случае MathJax версии 3: https://cdn.jsdelivr.net/npm/mathjax@3
# Этот тег требует, чтобы тег USE_MATHJAX был установлен в YES.

MATHJAX_RELPATH        =

# Тег MATHJAX_EXTENSIONS можно использовать для указания одного или нескольких имен расширений MathJax,
# которые должны быть включены во время рендеринга MathJax. Например, для MathJax версии 2 (см.
# https://docs.mathjax.org/en/v2.7-latest/tex.html#tex-and-latex-extensions):
# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols
# Например, для MathJax версии 3 (см. http://docs.mathjax.org/en/latest/input/tex/extensions/index.html):
# MATHJAX_EXTENSIONS = ams
# Этот тег требует, чтобы тег USE_MATHJAX был установлен в YES.

MATHJAX_EXTENSIONS     =

# Тег MATHJAX_CODEFILE можно использовать для указания файла с фрагментами JavaScript кода,
# которые будут использоваться при запуске кода MathJax. См. сайт MathJax (см.:
# http://docs.mathjax.org/en/v2.7-latest/output.html) для получения дополнительной информации. Например
# см. документацию.
# Этот тег требует, чтобы тег USE_MATHJAX был установлен в YES.

MATHJAX_CODEFILE       =

# Когда тег SEARCHENGINE включен, Doxygen сгенерирует поле поиска для
# HTML-вывода. Основной поисковый движок использует JavaScript и DHTML и
# должен работать в любом современном браузере. Обратите внимание, что при использовании HTML help
# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP) или docsets (GENERATE_DOCSET)
# уже имеется функция поиска, поэтому эта функция обычно должна быть отключена.
# Для больших проектов основанный на JavaScript поисковый движок может быть медленным, тогда
# включение SERVER_BASED_SEARCH может обеспечить лучшее решение. Возможность поиска с использованием клавиатуры;
# чтобы перейти к полю поиска, используйте <access key> + S (что такое <access key> зависит от ОС и браузера, но
# обычно это <CTRL>, <ALT>/<option> или оба). Внутри поля поиска используйте <cursor down key> для перехода
# в окно результатов поиска, результаты можно просматривать, используя <cursor keys>. Нажмите <Enter> для выбора
# элемента или <escape> для отмены поиска. Опции фильтра можно выбрать, когда курсор находится внутри поля поиска,
# нажав <Shift>+<cursor down>. Также используйте <cursor keys> для выбора фильтра и <Enter> или <escape> для активации
# или отмены опции фильтра.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_HTML был установлен в YES.

SEARCHENGINE           = YES

# Когда включен тег SERVER_BASED_SEARCH, поисковый движок будет реализован с использованием веб-сервера
# вместо веб-клиента с использованием JavaScript. Существуют два варианта поиска на основе веб-сервера в зависимости
# от настройки EXTERNAL_SEARCH. Когда отключен, Doxygen сгенерирует PHP-скрипт для поиска и
# индексный файл, используемый скриптом. Когда EXTERNAL_SEARCH включен, индексация и поиск
# должны осуществляться внешними инструментами. См. раздел "Внешняя индексация и поиск" для получения деталей.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

SERVER_BASED_SEARCH    = NO

# Когда тег EXTERNAL_SEARCH включен, Doxygen больше не будет генерировать PHP-скрипт для поиска.
# Вместо этого результаты поиска записываются в XML-файл, который должен быть обработан
# внешним индексатором. Doxygen вызовет внешний поисковый движок, указанный с помощью опции SEARCHENGINE_URL,
# для получения результатов поиска.
#
# Doxygen поставляется с примером индексатора (doxyindexer) и поискового движка
# (doxysearch.cgi), которые основаны на библиотеке поискового движка с открытым исходным кодом
# Xapian (см.: https://xapian.org/).
#
# См. раздел "Внешняя индексация и поиск" для получения деталей.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

EXTERNAL_SEARCH        = NO
# URL для SEARCHENGINE_URL должен указывать на поисковый движок, размещенный на веб-сервере,
# который будет возвращать результаты поиска, когда EXTERNAL_SEARCH включен.
#
# Doxygen поставляется с примером индексатора (doxyindexer) и поискового движка
# (doxysearch.cgi), которые основаны на библиотеке поискового движка с открытым исходным кодом
# Xapian (см.: https://xapian.org/). См. раздел "Внешняя индексация и поиск" для
# получения деталей.
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

SEARCHENGINE_URL       =

# Когда SERVER_BASED_SEARCH и EXTERNAL_SEARCH оба включены, не индексированные
# данные поиска записываются в файл для индексации внешним инструментом. С помощью тега
# SEARCHDATA_FILE можно указать имя этого файла.
# Значение по умолчанию: searchdata.xml.
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

SEARCHDATA_FILE        = searchdata.xml

# Когда SERVER_BASED_SEARCH и EXTERNAL_SEARCH оба включены, тег
# EXTERNAL_SEARCH_ID можно использовать в качестве идентификатора для проекта. Это
# полезно в комбинации с EXTRA_SEARCH_MAPPINGS для поиска через несколько проектов и
# перенаправления результатов обратно к правильному проекту.
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

EXTERNAL_SEARCH_ID     =

# Тег EXTRA_SEARCH_MAPPINGS можно использовать для включения поиска через проекты Doxygen,
# отличные от того, который определен в этом конфигурационном файле, но которые
# добавлены в тот же внешний поисковый индекс. Каждый проект должен иметь уникальный
# идентификатор, установленный с помощью EXTERNAL_SEARCH_ID. Карта поиска затем сопоставляет идентификатор
# с относительным местоположением, где можно найти документацию. Формат:
# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...
# Этот тег требует, чтобы тег SEARCHENGINE был установлен в YES.

EXTRA_SEARCH_MAPPINGS  =

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом LaTeX
#---------------------------------------------------------------------------

# Если тег GENERATE_LATEX установлен в YES, Doxygen будет генерировать вывод LaTeX.
# Значение по умолчанию: YES.

GENERATE_LATEX         = NO

# Тег LATEX_OUTPUT используется для указания, где будут находиться документы LaTeX. Если
# введен относительный путь, значение OUTPUT_DIRECTORY будет добавлено перед ним.
# Значение по умолчанию: latex.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_OUTPUT           = latex

# Тег LATEX_CMD_NAME можно использовать для указания имени команды LaTeX, которая будет вызываться.
#
# Обратите внимание, что при не включенном USE_PDFLATEX значение по умолчанию — latex, при включенном
# USE_PDFLATEX значение по умолчанию — pdflatex, и в последнем случае latex выбирается, то это
# заменяется pdflatex. Для конкретных языков вывода значение по умолчанию может быть установлено по-другому,
# это зависит от реализации языка вывода.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_CMD_NAME         =

# Тег MAKEINDEX_CMD_NAME можно использовать для указания имени команды для генерации
# индекса для LaTeX.
# Примечание: Этот тег используется в Makefile / make.bat.
# См. также: LATEX_MAKEINDEX_CMD для части в сгенерированном выходном файле (.tex).
# Значение по умолчанию: makeindex.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

MAKEINDEX_CMD_NAME     = makeindex

# Тег LATEX_MAKEINDEX_CMD можно использовать для указания имени команды для
# генерации индекса для LaTeX. Если первый символ не является обратной косой чертой (\),
# она будет автоматически добавлена в код LaTeX.
# Примечание: Этот тег используется в сгенерированном выходном файле (.tex).
# См. также: MAKEINDEX_CMD_NAME для части в Makefile / make.bat.
# Значение по умолчанию: makeindex.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_MAKEINDEX_CMD    = makeindex

# Если тег COMPACT_LATEX установлен в YES, Doxygen генерирует более компактные документы LaTeX.
# Это может быть полезно для небольших проектов и может помочь сэкономить несколько деревьев в целом.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

COMPACT_LATEX          = NO

# Тег PAPER_TYPE можно использовать для установки типа бумаги, используемого принтером.
# Возможные значения: a4 (210 x 297 мм), letter (8.5 x 11 дюймов), legal (8.5 x 14 дюймов) и executive (7.25 x 10.5 дюймов).
# Значение по умолчанию: a4.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

PAPER_TYPE             = a4

# Тег EXTRA_PACKAGES можно использовать для указания одного или нескольких имен пакетов LaTeX,
# которые должны быть включены в вывод LaTeX. Пакет можно указать просто по имени
# или с правильным синтаксисом для использования с командой LaTeX \usepackage. Например, чтобы получить шрифт times
# вы можете указать: EXTRA_PACKAGES=times или EXTRA_PACKAGES={times}
# Чтобы использовать опцию intlimits с пакетом amsmath, вы можете указать:
# EXTRA_PACKAGES=[intlimits]{amsmath}
# Если оставить пустым, никакие дополнительные пакеты включены не будут.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

EXTRA_PACKAGES         =
# Тег LATEX_HEADER можно использовать для указания пользовательского заголовка LaTeX для
# сгенерированного документа LaTeX. Заголовок должен содержать все до первой главы. Если он оставлен пустым,
# Doxygen сгенерирует стандартный заголовок. Настоятельно рекомендуется начать с стандартного заголовка,
# используя doxygen -w latex new_header.tex new_footer.tex new_stylesheet.sty
# и затем изменить файл new_header.tex. Также см. раздел "Использование Doxygen" для
# информации о том, как сгенерировать стандартный заголовок, который обычно используется Doxygen.
#
# Примечание: Используйте пользовательский заголовок только если вы уверены в своих действиях!
# Примечание: Заголовок может изменяться, поэтому вам обычно нужно будет регенерировать
# стандартный заголовок при обновлении до новой версии Doxygen. Следующие команды имеют специальное значение внутри
# заголовка (и подвала): для описания возможных маркеров и имен блоков см. документацию.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_HEADER           =

# Тег LATEX_FOOTER можно использовать для указания пользовательского подвала LaTeX для
# сгенерированного документа LaTeX. Подвал должен содержать все после последней главы. Если он оставлен пустым,
# Doxygen сгенерирует стандартный подвал. См. LATEX_HEADER для дополнительной информации о том, как
# сгенерировать стандартный подвал и какие специальные команды можно использовать внутри подвала. См. также раздел "Doxygen
# usage" для информации о том, как сгенерировать стандартный подвал, который обычно используется Doxygen. Примечание: Используйте
# пользовательский подвал только если вы уверены в своих действиях!
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_FOOTER           =

# Тег LATEX_EXTRA_STYLESHEET можно использовать для указания дополнительных пользовательских
# стилей LaTeX, которые включаются после стандартных стилей, созданных Doxygen. Использование этой опции позволяет
# переопределить определенные аспекты стиля. Doxygen скопирует файлы стилей в выходной каталог.
# Примечание: порядок дополнительных файлов стилей имеет значение (например, последний
# стиль в списке переопределяет настройки предыдущих стилей в списке).
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_EXTRA_STYLESHEET =

# Тег LATEX_EXTRA_FILES можно использовать для указания одного или нескольких дополнительных изображений или
# других исходных файлов, которые должны быть скопированы в выходной каталог LATEX_OUTPUT. Обратите внимание, что файлы будут
# скопированы как есть; команды или маркеры недоступны.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_EXTRA_FILES      =

# Если тег PDF_HYPERLINKS установлен в YES, то LaTeX, который создается, подготавливается
# для преобразования в PDF (с использованием ps2pdf или pdflatex). Файл PDF будет
# содержать ссылки (так же как и HTML вывод), вместо ссылок на страницы. Это
# делает вывод подходящим для онлайн-просмотра с использованием PDF-просмотрщика.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

PDF_HYPERLINKS         = YES

# Если тег USE_PDFLATEX установлен в YES, Doxygen будет использовать указанный в LATEX_CMD_NAME
# движок для генерации PDF-файла непосредственно из файлов LaTeX. Установите эту опцию в YES,
# чтобы получить документацию в формате PDF более высокого качества.
#
# См. также раздел LATEX_CMD_NAME для выбора движка.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

USE_PDFLATEX           = YES

# Тег LATEX_BATCHMODE сигнализирует о поведении LaTeX в случае ошибки.
# Возможные значения: NO — то же самое, что и ERROR_STOP, YES — то же самое, что и BATCH, BATCH
# В пакетном режиме ничего не печатается на терминале, ошибки прокручиваются так, как если бы <return> был
# нажата при каждой ошибке; отсутствующие файлы, которые TeX пытается ввести или запросить с клавиатуры (\read
# на не открытом входном потоке) вызывают прерывание работы, NON_STOP В непрерывном режиме диагностическое сообщение
# появится на терминале, но взаимодействие с пользователем невозможно, как и в пакетном режиме, SCROLL В режиме прокрутки
# TeX остановится только для отсутствующих файлов для ввода или если требуется ввод с клавиатуры, а ERROR_STOP В режиме
# остановки ошибок TeX остановится на каждой ошибке, запрашивая вмешательство пользователя.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_BATCHMODE        = NO

# Если тег LATEX_HIDE_INDICES установлен в YES, то Doxygen не будет включать
# главы индексов (такие как Индекс файлов, Индекс компонентов и т.д.) в вывод.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_HIDE_INDICES     = NO

# Тег LATEX_BIB_STYLE можно использовать для указания стиля, который следует использовать для
# библиографии, например plainnat или ieeetr. См.
# https://en.wikipedia.org/wiki/BibTeX и \cite для получения дополнительной информации.
# Значение по умолчанию: plain.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_BIB_STYLE        = plain

# Тег LATEX_EMOJI_DIRECTORY используется для указания (относительного или абсолютного)
# пути, откуда будут считываться изображения эмодзи. Если указан относительный путь,
# он будет относительным к каталогу LATEX_OUTPUT. Если оставлен пустым, будет использоваться
# каталог LATEX_OUTPUT.
# Этот тег требует, чтобы тег GENERATE_LATEX был установлен в YES.

LATEX_EMOJI_DIRECTORY  =

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом RTF
#---------------------------------------------------------------------------

# Если тег GENERATE_RTF установлен в YES, Doxygen будет генерировать вывод RTF. Вывод RTF
# оптимизирован для Word 97 и может не выглядеть слишком красиво в других RTF
# читателях/редакторах.
# Значение по умолчанию: NO.

GENERATE_RTF           = NO
# Тег RTF_OUTPUT используется для указания, где будут размещены RTF документы. Если указан относительный путь,
# значение OUTPUT_DIRECTORY будет добавлено перед ним. Значение по умолчанию: rtf.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

RTF_OUTPUT             = rtf

# Если тег COMPACT_RTF установлен в YES, Doxygen будет генерировать более компактные RTF
# документы. Это может быть полезно для небольших проектов и может помочь сохранить деревья в общем.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

COMPACT_RTF            = NO

# Если тег RTF_HYPERLINKS установлен в YES, то сгенерированный RTF будет содержать гиперссылки. Файл RTF будет
# содержать ссылки (так же как и HTML вывод) вместо ссылок на страницы. Это делает вывод подходящим для онлайн-просмотра
# с использованием Word или других совместимых с Word ридеров, которые поддерживают эти поля.
#
# Примечание: WordPad (write) и другие не поддерживают ссылки.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

RTF_HYPERLINKS         = NO

# Загрузить определения стилей из файла. Синтаксис аналогичен конфигурационному файлу Doxygen, т.е. серия присвоений.
# Нужно указать только заменяемые параметры, отсутствующие определения будут установлены по умолчанию.
#
# См. также раздел "Использование Doxygen" для информации о том, как сгенерировать стандартный файл стилей,
# который обычно используется Doxygen.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

RTF_STYLESHEET_FILE    =

# Установите необязательные переменные, используемые при генерации RTF документа. Синтаксис аналогичен конфигурационному
# файлу Doxygen. Шаблонный файл расширений можно сгенерировать, используя doxygen -e rtf extensionFile.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

RTF_EXTENSIONS_FILE    =

# Тег RTF_EXTRA_FILES можно использовать для указания одного или нескольких дополнительных изображений или
# других исходных файлов, которые должны быть скопированы в выходной каталог RTF_OUTPUT. Обратите внимание, что файлы будут
# скопированы как есть; команды или маркеры недоступны.
# Этот тег требует, чтобы тег GENERATE_RTF был установлен в YES.

RTF_EXTRA_FILES        =

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом man-страниц
#---------------------------------------------------------------------------

# Если тег GENERATE_MAN установлен в YES, Doxygen будет генерировать man-страницы для
# классов и файлов.
# Значение по умолчанию: NO.

GENERATE_MAN           = NO

# Тег MAN_OUTPUT используется для указания, где будут размещены man-страницы. Если указан относительный путь,
# значение OUTPUT_DIRECTORY будет добавлено перед ним. Внутри указанного каталога MAN_OUTPUT будет создан
# каталог man3.
# Значение по умолчанию: man.
# Этот тег требует, чтобы тег GENERATE_MAN был установлен в YES.

MAN_OUTPUT             = man

# Тег MAN_EXTENSION определяет расширение, которое добавляется к сгенерированным man-страницам. Если раздел
# руководства не начинается с числа, то число 3 добавляется. Точка (.) в начале тега MAN_EXTENSION
# является необязательной.
# Значение по умолчанию: .3.
# Этот тег требует, чтобы тег GENERATE_MAN был установлен в YES.

MAN_EXTENSION          = .3

# Тег MAN_SUBDIR определяет имя каталога, создаваемого внутри MAN_OUTPUT, в который помещаются man-страницы. По умолчанию
# это man, за которым следует MAN_EXTENSION с удаленной начальной точкой.
# Этот тег требует, чтобы тег GENERATE_MAN был установлен в YES.

MAN_SUBDIR             =

# Если тег MAN_LINKS установлен в YES и Doxygen генерирует man-вывод, то он создаст один дополнительный файл man для
# каждого сущности, документированной в реальных man-страницах. Эти дополнительные файлы только ссылаются на реальные
# man-страницы, но без них команда man не сможет найти правильную страницу.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_MAN был установлен в YES.

MAN_LINKS              = NO
#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с XML выводом
#---------------------------------------------------------------------------

# Если тег GENERATE_XML установлен в YES, Doxygen сгенерирует XML файл, который
# захватывает структуру кода, включая всю документацию.
# Значение по умолчанию: NO.

GENERATE_XML           = NO

# Тег XML_OUTPUT используется для указания, где будут размещены XML страницы. Если указан относительный путь,
# значение OUTPUT_DIRECTORY будет добавлено перед ним.
# Значение по умолчанию: xml.
# Этот тег требует, чтобы тег GENERATE_XML был установлен в YES.

XML_OUTPUT             = xml

# Если тег XML_PROGRAMLISTING установлен в YES, Doxygen будет включать
# списки программ (включая синтаксическую подсветку и информацию о перекрестных ссылках) в
# XML вывод. Обратите внимание, что включение этого параметра значительно увеличит размер
# XML вывода.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_XML был установлен в YES.

XML_PROGRAMLISTING     = YES

# Если тег XML_NS_MEMB_FILE_SCOPE установлен в YES, Doxygen будет включать
# члены пространств имен в область видимости файла, совпадающую с HTML выводом.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_XML был установлен в YES.

XML_NS_MEMB_FILE_SCOPE = NO

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом Docbook
#---------------------------------------------------------------------------

# Если тег GENERATE_DOCBOOK установлен в YES, Doxygen будет генерировать файлы Docbook,
# которые можно использовать для генерации PDF.
# Значение по умолчанию: NO.

GENERATE_DOCBOOK       = NO

# Тег DOCBOOK_OUTPUT используется для указания, где будут размещены страницы Docbook.
# Если указан относительный путь, значение OUTPUT_DIRECTORY будет добавлено перед ним.
# Значение по умолчанию: docbook.
# Этот тег требует, чтобы тег GENERATE_DOCBOOK был установлен в YES.

DOCBOOK_OUTPUT         = docbook

#---------------------------------------------------------------------------
# Конфигурационные опции для вывода определений AutoGen
#---------------------------------------------------------------------------

# Если тег GENERATE_AUTOGEN_DEF установлен в YES, Doxygen сгенерирует файл
# определений AutoGen (см. https://autogen.sourceforge.net/), который захватывает
# структуру кода, включая всю документацию. Обратите внимание, что эта функция
# все еще экспериментальная и неполная в данный момент.
# Значение по умолчанию: NO.

GENERATE_AUTOGEN_DEF   = NO

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом Sqlite3
#---------------------------------------------------------------------------

# Если тег GENERATE_SQLITE3 установлен в YES, Doxygen сгенерирует базу данных Sqlite3
# с символами, найденными Doxygen, хранящимися в таблицах.
# Значение по умолчанию: NO.

GENERATE_SQLITE3       = NO

# Тег SQLITE3_OUTPUT используется для указания, где будет размещена база данных Sqlite3.
# Если указан относительный путь, значение OUTPUT_DIRECTORY будет добавлено перед ним.
# Значение по умолчанию: sqlite3.
# Этот тег требует, чтобы тег GENERATE_SQLITE3 был установлен в YES.

SQLITE3_OUTPUT         = sqlite3

# Тег SQLITE3_RECREATE_DB установлен в YES, существующий файл базы данных doxygen_sqlite3.db
# будет пересоздан с каждым запуском Doxygen. Если установлен в NO, Doxygen
# предупредит, если файл базы данных уже найден и не изменит его.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_SQLITE3 был установлен в YES.

SQLITE3_RECREATE_DB    = YES

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с выводом модуля Perl
#---------------------------------------------------------------------------

# Если тег GENERATE_PERLMOD установлен в YES, Doxygen сгенерирует файл модуля Perl,
# который захватывает структуру кода, включая всю документацию.
#
# Обратите внимание, что эта функция все еще экспериментальная и неполная в данный момент.
# Значение по умолчанию: NO.

GENERATE_PERLMOD       = NO

# Если тег PERLMOD_LATEX установлен в YES, Doxygen сгенерирует необходимые
# правила Makefile, скрипты Perl и код LaTeX, чтобы можно было генерировать PDF и DVI
# вывод из вывода модуля Perl.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег GENERATE_PERLMOD был установлен в YES.

PERLMOD_LATEX          = NO

# Если тег PERLMOD_PRETTY установлен в YES, вывод модуля Perl будет красиво
# отформатирован, чтобы его мог прочитать человек. Это полезно, если вы хотите
# понять, что происходит. С другой стороны, если этот тег установлен в NO, размер вывода
# модуля Perl будет значительно меньше, и Perl будет обрабатывать его так же.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег GENERATE_PERLMOD был установлен в YES.

PERLMOD_PRETTY         = YES

# Имена переменных make в сгенерированном файле doxyrules.make будут иметь префикс,
# указанный в PERLMOD_MAKEVAR_PREFIX. Это полезно, чтобы разные файлы doxyrules.make,
# включенные в один Makefile, не перезаписывали переменные друг друга.
# Этот тег требует, чтобы тег GENERATE_PERLMOD был установлен в YES.

PERLMOD_MAKEVAR_PREFIX =

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с препроцессором
#---------------------------------------------------------------------------

# Если тег ENABLE_PREPROCESSING установлен в YES, Doxygen будет обрабатывать все
# директивы препроцессора C, найденные в исходных файлах и включаемых файлах.
# Значение по умолчанию: YES.

ENABLE_PREPROCESSING   = YES

# Если тег MACRO_EXPANSION установлен в YES, Doxygen будет расширять все имена макросов
# в исходном коде. Если установлен в NO, будет выполняться только условная компиляция.
# Расширение макросов можно контролировать, установив EXPAND_ONLY_PREDEF в YES.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

MACRO_EXPANSION        = NO

# Если теги EXPAND_ONLY_PREDEF и MACRO_EXPANSION оба установлены в YES, то
# расширение макросов ограничивается макросами, указанными в тегах PREDEFINED и
# EXPAND_AS_DEFINED.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

EXPAND_ONLY_PREDEF     = NO

# Если тег SEARCH_INCLUDES установлен в YES, файлы включений в
# INCLUDE_PATH будут искать, если найдена директива #include.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

SEARCH_INCLUDES        = YES

# Тег INCLUDE_PATH можно использовать для указания одного или нескольких каталогов, которые
# содержат файлы включений, которые не являются входными файлами, но должны быть обработаны
# препроцессором. Обратите внимание, что INCLUDE_PATH не является рекурсивным, поэтому
# настройка RECURSIVE не имеет здесь эффекта.
# Этот тег требует, чтобы тег SEARCH_INCLUDES был установлен в YES.

INCLUDE_PATH           =

# Вы можете использовать тег INCLUDE_FILE_PATTERNS для указания одного или нескольких шаблонов
# подстановки (например, *.h и *.hpp) для фильтрации файлов заголовков в каталогах. Если оставить пустым,
# будут использоваться шаблоны, указанные в FILE_PATTERNS.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

INCLUDE_FILE_PATTERNS  =

# Тег PREDEFINED можно использовать для указания одного или нескольких имен макросов, которые определены
# до начала работы препроцессора (аналогично опции -D например, gcc). Аргумент тега - это список макросов
# вида: name или name=definition (без пробелов). Если определение и "=" опущены, предполагается "=1".
# Чтобы предотвратить удаление определения макроса через #undef или рекурсивное расширение, используйте оператор
# := вместо оператора =.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

PREDEFINED             =

# Если теги MACRO_EXPANSION и EXPAND_ONLY_PREDEF установлены в YES, то этот тег можно использовать для
# указания списка имен макросов, которые должны быть расширены. Будет использоваться определение макроса,
# найденное в исходниках. Используйте тег PREDEFINED, если вы хотите использовать другое определение макроса,
# которое переопределяет определение, найденное в исходном коде.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

EXPAND_AS_DEFINED      =

# Если тег SKIP_FUNCTION_MACROS установлен в YES, препроцессор Doxygen удалит все ссылки на макросы,
# подобные функциям, которые находятся одни на строке, имеют все заглавные буквы и не заканчиваются точкой с запятой.
# Такие макросы, как правило, используются для кода-шаблонов и могут запутать парсер, если не удалить их.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег ENABLE_PREPROCESSING был установлен в YES.

SKIP_FUNCTION_MACROS   = YES

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с внешними ссылками
#---------------------------------------------------------------------------

# Тег TAGFILES можно использовать для указания одного или нескольких файлов тегов. Для каждого файла тегов
# следует добавить расположение внешней документации. Формат файла тега без этого расположения следующий:
# TAGFILES = file1 file2 ...
# Добавление расположения для файлов тегов выполняется следующим образом:
# TAGFILES = file1=loc1 "file2=loc2" ...
# где loc1 и loc2 могут быть относительными или абсолютными путями или URL. См. раздел
# "Ссылки на внешнюю документацию" для получения дополнительной информации о использовании файлов тегов.
# Примечание: Каждый файл тега должен иметь уникальное имя (где имя не включает путь). Если файл тега не
# расположен в каталоге, в котором выполняется Doxygen, вы также должны указать путь к файлу тега здесь.

TAGFILES               =
#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с генерацией файлов тегов
#---------------------------------------------------------------------------

# Когда указано имя файла после GENERATE_TAGFILE, Doxygen создаст файл тегов,
# основанный на входных файлах, которые он читает. См. раздел "Ссылки на внешнюю
# документацию" для получения дополнительной информации о использовании файлов тегов.

GENERATE_TAGFILE       =

# Если тег ALLEXTERNALS установлен в YES, все внешние классы и пространства имен
# будут перечислены в индексе классов и пространств имен. Если установлен в NO,
# будут перечислены только унаследованные внешние классы.
# Значение по умолчанию: NO.

ALLEXTERNALS           = NO

# Если тег EXTERNAL_GROUPS установлен в YES, все внешние группы будут перечислены
# в индексе тем. Если установлен в NO, будут перечислены только группы текущего
# проекта.
# Значение по умолчанию: YES.

EXTERNAL_GROUPS        = YES

# Если тег EXTERNAL_PAGES установлен в YES, все внешние страницы будут перечислены
# в индексе связанных страниц. Если установлен в NO, будут перечислены только
# страницы текущего проекта.
# Значение по умолчанию: YES.

EXTERNAL_PAGES         = YES

#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с инструментами генерации диаграмм
#---------------------------------------------------------------------------

# Если установлено YES, графики наследования и взаимодействия будут скрывать
# отношения наследования и использования, если целевой элемент не документирован
# или не является классом.
# Значение по умолчанию: YES.

HIDE_UNDOC_RELATIONS   = YES

# Если вы установите тег HAVE_DOT в YES, то Doxygen будет считать, что инструмент dot
# доступен в пути. Этот инструмент является частью Graphviz (см.:
# https://www.graphviz.org/), набора инструментов визуализации графов от AT&T и Lucent
# Bell Labs. Другие опции в этом разделе не будут иметь эффекта, если эта опция установлена в NO.
# Значение по умолчанию: NO.

HAVE_DOT               = NO

# DOT_NUM_THREADS указывает количество параллельных вызовов dot, которые Doxygen
# разрешено выполнять. При установке в 0 Doxygen будет основывать это на количестве
# доступных процессоров в системе. Вы можете явно установить это значение больше 0,
# чтобы контролировать баланс между загрузкой ЦП и скоростью обработки.
# Минимальное значение: 0, максимальное значение: 32, значение по умолчанию: 0.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_NUM_THREADS        = 0

# DOT_COMMON_ATTR - общие атрибуты для узлов, рёбер и меток подграфов. Если вы хотите
# изменить внешний вид шрифта в файлах dot, которые генерирует Doxygen, вы можете
# указать атрибуты fontname, fontcolor и fontsize. См. <a
# href=https://graphviz.org/doc/info/attrs.html>спецификацию атрибутов узлов, рёбер и графов</a>.
# Вам нужно убедиться, что dot может найти шрифт, что можно сделать, поместив его в
# стандартное место или установив переменную окружения DOTFONTPATH или DOT_FONTPATH
# на каталог, содержащий шрифт. Значение по умолчанию: fontname=Helvetica,fontsize=10.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_COMMON_ATTR        = "fontname=Helvetica,fontsize=10"

# DOT_EDGE_ATTR объединяется с DOT_COMMON_ATTR. Для элегантного стиля вы можете
# добавить 'arrowhead=open, arrowtail=open, arrowsize=0.5'. <a
# href=https://graphviz.org/doc/info/arrows.html>Полная документация о формах стрелок.</a>
# Значение по умолчанию: labelfontname=Helvetica,labelfontsize=10.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_EDGE_ATTR          = "labelfontname=Helvetica,labelfontsize=10"

# DOT_NODE_ATTR объединяется с DOT_COMMON_ATTR. Для вида без рамок вокруг узлов
# установите 'shape=plain' или 'shape=plaintext'. <a
# href=https://www.graphviz.org/doc/info/shapes.html>Спецификация форм</a>.
# Значение по умолчанию: shape=box,height=0.2,width=0.4.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_NODE_ATTR          = "shape=box,height=0.2,width=0.4"

# Вы можете установить путь, по которому dot может найти шрифт, указанный в fontname
# в DOT_COMMON_ATTR и других атрибутах dot.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_FONTPATH           =

# Если тег CLASS_GRAPH установлен в YES или GRAPH или BUILTIN, то Doxygen будет
# генерировать график для каждого документированного класса, показывающий прямые и
# косвенные отношения наследования. Если тег CLASS_GRAPH установлен в YES или GRAPH
# и HAVE_DOT также включен, то dot будет использоваться для рисования графика. Если тег
# CLASS_GRAPH установлен в YES и HAVE_DOT отключен или если тег CLASS_GRAPH установлен в
# BUILTIN, то будет использоваться встроенный генератор.
# Если тег CLASS_GRAPH установлен в TEXT, то прямые и косвенные отношения наследования
# будут показаны как текстовые ссылки. Явное включение графа наследования или выбор
# другого представления графа наследования для конкретного класса можно выполнить с помощью
# команды \inheritancegraph. Отключение графа наследования можно выполнить с помощью
# команды \hideinheritancegraph.
# Возможные значения: NO, YES, TEXT, GRAPH и BUILTIN.
# Значение по умолчанию: YES.

CLASS_GRAPH            = YES

# Если тег COLLABORATION_GRAPH установлен в YES, то Doxygen будет генерировать
# график для каждого документированного класса, показывая прямые и косвенные
# зависимости реализации (наследование, содержащие и ссылки на классы) этого
# класса с другими документированными классами. Явное включение графика
# сотрудничества, когда COLLABORATION_GRAPH установлен в NO, можно выполнить с
# помощью команды \collaborationgraph. Отключение графика сотрудничества можно
# выполнить с помощью команды \hidecollaborationgraph.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

COLLABORATION_GRAPH    = YES

# Если тег GROUP_GRAPHS установлен в YES, то Doxygen будет генерировать график для
# групп, показывая прямые зависимости между группами. Явное включение графика
# зависимости групп, когда GROUP_GRAPHS установлен в NO, можно выполнить с помощью
# команды \groupgraph. Отключение графика группы можно выполнить с помощью команды
# \hidegroupgraph. См. также главу "Grouping" в руководстве.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

GROUP_GRAPHS           = YES

# Если тег UML_LOOK установлен в YES, то Doxygen будет генерировать диаграммы
# наследования и сотрудничества в стиле, похожем на Объединенный Язык Моделирования
# (UML) OMG.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

UML_LOOK               = NO

# Если тег UML_LOOK включен, поля и методы отображаются внутри узла класса. Если
# полей или методов много и много узлов, граф может стать слишком большим, чтобы
# быть полезным. Порог UML_LIMIT_NUM_FIELDS ограничивает количество элементов
# для каждого типа, чтобы сделать размер более управляемым. Установите это значение
# в 0 для отсутствия ограничений. Обратите внимание, что порог может быть превышен
# на 50% перед применением ограничения. Так, если вы установите порог в 10, до 15
# полей может появиться, но если количество превышает 15, общее количество отображаемых
# полей ограничено 10.
# Минимальное значение: 0, максимальное значение: 100, значение по умолчанию: 10.
# Этот тег требует, чтобы тег UML_LOOK был установлен в YES.

UML_LIMIT_NUM_FIELDS   = 10

# Если тег DOT_UML_DETAILS установлен в NO, Doxygen будет показывать атрибуты и
# методы без типов и аргументов на диаграммах UML. Если тег DOT_UML_DETAILS установлен
# в YES, Doxygen добавит тип и аргументы для атрибутов и методов на диаграммах UML.
# Если тег DOT_UML_DETAILS установлен в NONE, Doxygen не будет генерировать поля с
# информацией о членах класса на диаграммах UML. Диаграммы классов будут выглядеть
# аналогично стандартным диаграммам классов, но с использованием нотации UML для
# отношений.
# Возможные значения: NO, YES и NONE.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег UML_LOOK был установлен в YES.

DOT_UML_DETAILS        = NO

# Тег DOT_WRAP_THRESHOLD можно использовать для установки максимального количества
# символов для отображения в одной строке. Если фактическая длина строки значительно
# превышает этот порог, она будет перенесена на несколько строк. Применяются некоторые
# эвристики для предотвращения некрасивых разрывов строк.
# Минимальное значение: 0, максимальное значение: 1000, значение по умолчанию: 17.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_WRAP_THRESHOLD     = 17

# Если тег TEMPLATE_RELATIONS установлен в YES, то диаграммы наследования и
# сотрудничества будут показывать отношения между шаблонами и их экземплярами.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

TEMPLATE_RELATIONS     = NO

# Если теги INCLUDE_GRAPH, ENABLE_PREPROCESSING и SEARCH_INCLUDES установлены в YES,
# то Doxygen будет генерировать график для каждого документированного файла, показывая
# прямые и косвенные зависимости включения этого файла с другими документированными
# файлами. Явное включение графика включений, когда INCLUDE_GRAPH установлен в NO, можно
# выполнить с помощью команды \includegraph. Отключение графика включений можно выполнить
# с помощью команды \hideincludegraph.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

INCLUDE_GRAPH          = YES

# Если теги INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING и SEARCH_INCLUDES установлены в YES,
# то Doxygen будет генерировать график для каждого документированного файла, показывая
# прямые и косвенные зависимости включения других документированных файлов в этот файл.
# Явное включение графика включений, когда INCLUDED_BY_GRAPH установлен в NO, можно
# выполнить с помощью команды \includedbygraph. Отключение графика включений можно выполнить
# с помощью команды \hideincludedbygraph.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

INCLUDED_BY_GRAPH      = YES
#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с генерацией графиков вызовов и зависимостей
#---------------------------------------------------------------------------

# Если тег CALL_GRAPH установлен в YES, то Doxygen будет генерировать график
# зависимостей вызовов для каждой глобальной функции или метода класса.
#
# Обратите внимание, что включение этой опции значительно увеличит время выполнения.
# Поэтому в большинстве случаев лучше включать графики вызовов только для выбранных
# функций с помощью команды \callgraph. Отключить график вызовов можно с помощью
# команды \hidecallgraph.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

CALL_GRAPH             = NO

# Если тег CALLER_GRAPH установлен в YES, то Doxygen будет генерировать график
# зависимостей вызовов для каждой глобальной функции или метода класса.
#
# Обратите внимание, что включение этой опции значительно увеличит время выполнения.
# Поэтому в большинстве случаев лучше включать графики вызовов только для выбранных
# функций с помощью команды \callergraph. Отключить график вызовов можно с помощью
# команды \hidecallergraph.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

CALLER_GRAPH           = NO

# Если тег GRAPHICAL_HIERARCHY установлен в YES, то Doxygen будет генерировать
# графическую иерархию всех классов вместо текстовой.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

GRAPHICAL_HIERARCHY    = YES

# Если тег DIRECTORY_GRAPH установлен в YES, то Doxygen будет показывать зависимости
# директории на другие директории графически. Зависимости определяются по отношениям
# #include между файлами в директориях. Явное включение графика директорий, когда
# DIRECTORY_GRAPH установлен в NO, можно выполнить с помощью команды \directorygraph.
# Отключение графика директорий можно выполнить с помощью команды \hidedirectorygraph.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DIRECTORY_GRAPH        = YES

# Тег DIR_GRAPH_MAX_DEPTH можно использовать для ограничения максимального количества
# уровней дочерних директорий, генерируемых в графиках зависимости директорий.
# Минимальное значение: 1, максимальное значение: 25, значение по умолчанию: 1.
# Этот тег требует, чтобы тег DIRECTORY_GRAPH был установлен в YES.

DIR_GRAPH_MAX_DEPTH    = 1

# Тег DOT_IMAGE_FORMAT можно использовать для установки формата изображения
# изображений, генерируемых инструментом dot. Для объяснения форматов изображений
# см. раздел форматы вывода в документации инструмента dot (Graphviz (см.:
# https://www.graphviz.org/)).
# Примечание: Если вы выберете svg, необходимо установить HTML_FILE_EXTENSION в xhtml,
# чтобы сделать SVG-файлы видимыми в IE 9+ (другие браузеры не имеют этого требования).
# Возможные значения: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,
# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus и png:gdiplus:gdiplus.
# Значение по умолчанию: png.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_IMAGE_FORMAT       = png

# Если DOT_IMAGE_FORMAT установлен в svg, то эту опцию можно установить в YES, чтобы
# включить генерацию интерактивных SVG-изображений, позволяющих масштабирование и
# панорамирование.
#
# Обратите внимание, что это требует современного браузера, кроме Internet Explorer.
# Проверенные и работающие браузеры: Firefox, Chrome, Safari и Opera.
# Примечание: Для IE 9+ необходимо установить HTML_FILE_EXTENSION в xhtml, чтобы сделать
# SVG-файлы видимыми. Более старые версии IE не поддерживают SVG.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

INTERACTIVE_SVG        = NO

# Тег DOT_PATH можно использовать для указания пути, где можно найти инструмент dot.
# Если оставить пустым, предполагается, что инструмент dot можно найти в пути.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_PATH               =

# Тег DOTFILE_DIRS можно использовать для указания одного или нескольких каталогов,
# содержащих файлы dot, которые включены в документацию (см. команду \dotfile).
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOTFILE_DIRS           =

# Вы можете включать диаграммы, созданные с помощью dia, в документацию Doxygen. Doxygen
# затем выполнит dia для создания диаграммы и вставит ее в документацию. Тег DIA_PATH
# позволяет указать каталог, где находится исполняемый файл dia. Если оставить пустым,
# предполагается, что dia можно найти в стандартном пути поиска.

DIA_PATH               =

# Тег DIAFILE_DIRS можно использовать для указания одного или нескольких каталогов,
# содержащих файлы dia, которые включены в документацию (см. команду \diafile).

DIAFILE_DIRS           =
#---------------------------------------------------------------------------
# Конфигурационные опции, связанные с использованием PlantUML и других инструментов
#---------------------------------------------------------------------------

# При использовании PlantUML тег PLANTUML_JAR_PATH должен быть использован
# для указания пути, по которому java может найти файл plantuml.jar или к
# имени файла jar, который будет использоваться. Если оставить пустым, предполагается,
# что PlantUML не используется или не вызывается в процессе предварительной обработки.
# Doxygen сгенерирует предупреждение, если встретит команду \startuml в этом случае и
# не сгенерирует выходные данные для диаграммы.

PLANTUML_JAR_PATH      =

# При использовании PlantUML тег PLANTUML_CFG_FILE можно использовать для
# указания конфигурационного файла для PlantUML.

PLANTUML_CFG_FILE      =

# При использовании PlantUML указанные пути ищутся для файлов, указанных в
# команде !include в блоке PlantUML.

PLANTUML_INCLUDE_PATH  =

# Тег DOT_GRAPH_MAX_NODES можно использовать для установки максимального количества
# узлов, которые будут отображаться на графике. Если количество узлов в графике
# становится больше этого значения, Doxygen обрежет график, что визуализируется
# путем представления узла как красной коробки. Обратите внимание, что если количество
# прямых потомков корневого узла в графике уже больше DOT_GRAPH_MAX_NODES, то график
# вообще не будет показан. Также обратите внимание, что размер графика может быть
# дополнительно ограничен MAX_DOT_GRAPH_DEPTH.
# Минимальное значение: 0, максимальное значение: 10000, значение по умолчанию: 50.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_GRAPH_MAX_NODES    = 50

# Тег MAX_DOT_GRAPH_DEPTH можно использовать для установки максимальной глубины
# графиков, генерируемых dot. Значение глубины 3 означает, что будут показаны только
# узлы, доступные от корня, следуя по пути через не более 3 ребер. Узлы, находящиеся
# дальше от корневого узла, будут опущены. Обратите внимание, что установка этой
# опции в 1 или 2 может значительно сократить время вычислений для больших кодовых
# баз. Также обратите внимание, что размер графика может быть дополнительно ограничен
# DOT_GRAPH_MAX_NODES. Использование глубины 0 означает отсутствие ограничения глубины.
# Минимальное значение: 0, максимальное значение: 1000, значение по умолчанию: 0.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

MAX_DOT_GRAPH_DEPTH    = 0

# Установите тег DOT_MULTI_TARGETS в YES, чтобы разрешить dot генерировать несколько
# выходных файлов за один запуск (т.е. несколько опций -o и -T на командной строке).
# Это ускоряет работу dot, но поскольку только более новые версии dot (>1.8.10) поддерживают
# эту функцию, она отключена по умолчанию.
# Значение по умолчанию: NO.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

DOT_MULTI_TARGETS      = NO

# Если тег GENERATE_LEGEND установлен в YES, Doxygen будет генерировать страницу легенды,
# объясняющую значения различных коробок и стрелок в графиках, созданных dot.
# Примечание: Этот тег требует, чтобы UML_LOOK не был установлен, т.е. используется
# встроенное графическое представление Doxygen для диаграмм наследования и сотрудничества.
# Значение по умолчанию: YES.
# Этот тег требует, чтобы тег HAVE_DOT был установлен в YES.

GENERATE_LEGEND        = YES

# Если тег DOT_CLEANUP установлен в YES, Doxygen удалит промежуточные файлы, которые
# используются для генерации различных графиков.
#
# Примечание: Эта настройка используется не только для файлов dot, но и для временных
# файлов msc.
# Значение по умолчанию: YES.

DOT_CLEANUP            = YES

# Вы можете определить диаграммы последовательностей сообщений внутри комментариев Doxygen
# с помощью команды \msc. Если тег MSCGEN_TOOL оставлен пустым (по умолчанию), то Doxygen
# будет использовать встроенную версию инструмента mscgen для создания диаграмм. В качестве
# альтернативы, тег MSCGEN_TOOL также может указывать имя внешнего инструмента. Например,
# указав prog в качестве значения, Doxygen вызовет инструмент как prog -T
# <outfile_format> -o <outputfile> <inputfile>. Внешний инструмент должен поддерживать
# форматы выходных файлов "png", "eps", "svg" и "ismap".

MSCGEN_TOOL            =

# Тег MSCFILE_DIRS можно использовать для указания одного или нескольких каталогов,
# содержащих файлы msc, которые включены в документацию (см. команду \mscfile).

MSCFILE_DIRS           =
